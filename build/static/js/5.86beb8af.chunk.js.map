{"version":3,"sources":["pages/dashboard/Sidebar.js","pages/home/index.js","pages/gallery/galleryForm.js","pages/gallery/box.js","pages/gallery/viewGallery.js","pages/gallery/index.js","pages/news&events/newsForm.js","pages/news&events/box.js","pages/news&events/index.js","pages/tenders/tenderForm.js","pages/tenders/index.js","pages/jobs/jobForm.js","pages/jobs/index.js","pages/downloads/downloadForm.js","pages/downloads/index.js","pages/usefulLinks/linkForm.js","pages/usefulLinks/index.js","pages/headlines/headlineForm.js","pages/headlines/index.js","pages/slider/sliderForm.js","pages/slider/box.js","pages/slider/index.js","pages/videos/videoForm.js","pages/videos/box.js","pages/videos/index.js","pages/kmz/form.js","pages/kmz/index.js","pages/team/form.js","pages/team/index.js","pages/sociallinks/form.js","pages/sociallinks/index.js","pages/users/UserForm.js","pages/users/Users.js","pages/users/RoleForm.js","pages/users/Roles.js","pages/users/index.js","pages/subjects/subjectForm.js","pages/subjects/ClassForm.js","pages/subjects/ClassCard.js","pages/subjects/SubjectCard.js","pages/subjects/index.js","pages/subjects/ChapterForm.js","pages/subjects/topicForm.js","pages/subjects/quizForm.js","pages/subjects/viewQuizForm.js","pages/subjects/contentForm.js","pages/subjects/SubjectDetails.js","pages/dashboard/index.js"],"names":["sidemenu","to","label","icon","Sidebar","props","location","useLocation","ability","useAbility","useState","active","setActive","auth","useAuth","useEffect","can","pathname","h","w","minW","bg","py","shadow","borderRight","borderColor","spacing","px","overflowY","map","item","index","className","rounded","_hover","as","mr","name","color","fontSize","fontWeight","src","alt","height","width","Home","I","a","GalleryForm","open","data","onClose","toast","useToast","dispatch","useDispatch","useBoolean","submitting","setSubmitting","state","setState","errors","setErrors","fileRef","React","useRef","handleInputChange","value","thumbnail","file","preview","public_path","title","footer","isLoading","size","type","form","id","onSubmit","e","preventDefault","on","formData","FormData","append","description","_id","action","galleryAction","update","add","then","res","off","message","status","catch","err","error","objectFit","boxSize","onClick","current","click","d","ref","onChange","reader","FileReader","target","files","onloadend","result","readAsDataURL","handleFileChange","justifyContent","my","alignItems","textarea","BoX","onEdit","onView","onDelete","border","cursor","roundedTop","isTruncated","p","borderTop","colorScheme","stopPropagation","ViewGallery","console","log","i","temp","images","image","original","handleSubmit","photos","length","addGalleryImage","htmlFor","maxW","maxH","Gallery","useNavigate","loading","setLoading","openGallery","setOpenGallery","editableGallery","setEditableGallery","openViewGallery","setOpenViewGallery","editableViewGallery","setEditableViewGallery","gallerys","useSelector","gallery","get","deleteGallery","galleryID","window","confirm","remove","position","top","zIndex","m","variant","ml","columns","g","viewGallery","center","textAlign","mt","NewsForm","date","detail","newsAction","handleOnDelete","News_Events","setOpen","editable","setEditable","newses","deleteNews","newsID","news","n","TenderForm","release","closing","tendersAction","fileName","Tenders","tenders","deleteTender","tender","t","JobForm","jobsAction","department","Jobs","jobs","deleteJob","jobID","job","j","dangerouslySetInnerHTML","__html","DownloadForm","downloadsAction","Downloads","downloads","deleteDownload","downloadID","download","LinkForm","linksAction","link","leftLabel","UsefulLinks","links","linkID","l","HeadlineForm","headlineAction","headlines","deleteHeadline","headlineID","headline","SliderForm","sliderAction","Slider","slider","deleteSlide","slideID","slide","s","handleEdit","VideoForm","videosAction","Videos","videos","videoID","video","v","Form","kmz","locationsAction","Locations","locations","locationID","teamAction","designation","email","phone","Team","team","ID","member","socialLinksAction","SocialLinks","socialLinks","UserForm","roles","rolesAction","role","push","handleClose","usersAction","first_name","last_name","InputMask","mask","maskChar","cnic","password","confirm_password","vals","flexDir","r","Users","users","resetData","deleteItem","getRoles","user","join","flex","u","RoleForm","permissions","permissions_obj","resources","resource","resource_permissions","perm","pb","permission","isChecked","per","checked","Roles","navigate","goTo","borderBottom","mx","NavLink","Button","rightIcon","exact","path","element","SubjectForm","classes","subjects","assignedTo","class","subjectsAction","cls","c","ClassForm","update_class","add_class","ClassCard","SubjectCard","Subjects","activeClass","setActiveClass","classOpen","setClassOpen","classEditable","setClassEditable","clear_subjects","get_classes","flexWrap","getSubjects","obj","remove_class","handleClassDelete","display","subject","ChapterForm","order","updateChapter","addChapter","defaultValue","TopicForm","chapterID","updateTopic","addTopic","QuizForm","contentType","difficulty","Easy","Medium","Hard","duration","passingGrade","random","content","updateContent","topicID","addContent","input","radio","placeholder","ViewQuizForm","IDs","questionBank","questionBankTagQuestions","quizQuestions","userID","currentQuestion","questions","qBTagQuestions","setQBTagQuestions","qQuestions","setQQuestions","tags","setTags","getQuestions","questionBankAction","getByTags","quizID","editQuestion","key","editedQuestions","filter","question","q","clearTags","borderRightWidth","pr","onKeyUp","tempTag","keyCode","tag","borderRadius","check","tempArr","addQuestionFromQB","borderWidth","subjectID","chapter","topic","explaination","options","answers","mb","KEY","changeQuestion","questionIndex","filterQuestions","removeQuestion","removeQuizQuestion","changeLevel","option","o","editAnswer","answer","_","handleQuestionTags","ContentForm","setFile","SubjectDetails","subject_id","useParams","openTopic","setOpenTopic","editableTopic","setEditableTopic","chapID","setChapID","openContent","setOpenContent","editableContent","setEditableContent","setContentType","openViewQuiz","setOpenViewQuiz","setIDs","openQuiz","setOpenQuiz","editableQuiz","setEditableQuiz","chapters","setChapters","clear_subject","details","deleteChapter","deleteTopic","removeContent","contentID","deleteContent","reorder","list","startIndex","endIndex","Array","from","splice","removed","onDragEnd","destination","sourceIndex","source","destIndex","items","itemSubItemMap","reduce","acc","topics","sourceParentId","droppableId","destParentId","sourceSubItems","destSubItems","newItems","reorderedSubItems","newSourceSubItems","draggedItem","newDestSubItems","provided","innerRef","draggableId","draggableProps","dragHandleProps","provided2","provided3","placement","actions","text","contents","editContent","Dashboard"],"mappings":"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","file":"static/js/5.86beb8af.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\r\nimport {Box, Image, HStack, Button, Text, VStack} from '@chakra-ui/react'\r\nimport {NavLink, useLocation} from 'react-router-dom'\r\nimport { Icon } from \"../../ui-elements\";\r\nimport {useAuth, useAbility} from '../../hooks'\r\n\r\nconst sidemenu = [\r\n    {to: '/', label: 'Dashboard ', icon: 'ios-speedometer'},   \r\n    {to: '/gallery', label: 'Gallery', icon: 'md-photos'},    \r\n    {to: '/slider', label: 'Slider', icon: 'ios-images'},    \r\n    {to: '/news-&-events', label: 'News & Events', icon: 'md-paper'},    \r\n    {to: '/team', label: 'Core Team', icon: 'ios-people'},    \r\n    {to: '/headlines', label: 'Headlines', icon: 'ios-notifications'},    \r\n    {to: '/tenders', label: 'Tenders', icon: 'ios-briefcase'},    \r\n    {to: '/jobs', label: 'Jobs', icon: 'ios-construct'},    \r\n    {to: '/downloads', label: 'Downloads', icon: 'md-download'},    \r\n    {to: '/usefulLinks', label: 'Useful Links', icon: 'md-link'},    \r\n    {to: '/social-links', label: 'Social Links', icon: 'md-phone-portrait'},    \r\n    {to: '/videos', label: 'Videos', icon: 'ios-videocam'},    \r\n    {to: '/locations', label: 'Locations', icon: 'md-pin'},    \r\n    // {to: '/settings', label: 'Settings', icon: 'ios-cog'},\r\n]\r\n\r\nconst Sidebar = (props) => {\r\n    const location = useLocation()\r\n    const ability = useAbility()\r\n    const [active, setActive] = useState(null)\r\n    const auth = useAuth()\r\n\r\n    \r\n\r\n\r\n    useEffect(() => {     \r\n        if(ability.can('read:any', 'subjects')){\r\n         //   sidemenu.push({to: '/subjects', label: 'Subjects', icon: 'ios-copy'})\r\n        }\r\n        if(ability.can('read:any', 'users')){            \r\n            // sidemenu.push({to: '/users', label: 'User Management', icon: 'ios-people'})            \r\n        }\r\n        \r\n    }, [auth, ability])\r\n    \r\n    useEffect(() => {\r\n        setActive(location?.pathname)\r\n    }, [location])\r\n\r\n    const handleLogout = () => {\r\n        auth.logout()\r\n            .then(() => {\r\n                window.location.href=\"/\"\r\n            })\r\n            .catch((e) => {\r\n                window.location.href=\"/\"\r\n            })\r\n        \r\n    }\r\n     \r\n    return(\r\n        <VStack h=\"100%\" w={\"260px\"} minW=\"260px\" bg=\"white\"  py=\"10px\" shadow=\"lg\"  borderRight=\"1px solid\" borderColor=\"gray.100\">\r\n            <VStack w='100%' spacing={2} px={3} h=\"100%\" overflowY=\"auto\">\r\n                {\r\n                    sidemenu?.map((item, index) =>\r\n                    <Box key={index} w='100%'>                        \r\n                        <NavLink to={item.to} >\r\n                            <HStack bg={active === item.to ? \"brand.500\" : 'white'} className=\"align-center\" px=\"2\" py=\"1.5\" rounded=\"sm\" _hover={{ bg: active !== item.to && 'gray.100' }}>\r\n                                <Box w=\"28px\" as=\"span\" mr=\"1\" h=\"28px\" className='center' rounded=\"full\">\r\n                                    <Icon name={item.icon} color={active === item.to ? \"white\" : 'gray.400'} fontSize=\"18px\"  />\r\n                                </Box>\r\n                                <Text as=\"span\" fontWeight=\"medium\" fontSize=\"sm\" color={active === item.to ? \"white\" : \"gray.500\"}>{item.label} </Text>\r\n                            </HStack>\r\n                        </NavLink>                        \r\n                    </Box>\r\n                    )\r\n                }                                 \r\n            </VStack>\r\n            {/* <VStack w='100%' px={3} py=\"2\" alignItems='flex-start'>\r\n                <Text>Logged In as <Text as=\"span\" fontWeight=\"bold\">{auth?.user?.first_name + \" \" + auth?.user?.last_name}</Text></Text>\r\n                <Button onClick={handleLogout} rounded='sm' size=\"sm\" my=\"4\">Logout</Button>\r\n            </VStack> */}\r\n            <Box  w=\"100%\" className=\"justify-center\">\r\n                    <Image  w=\"100%\"  src=\"/images/logo.png\" alt=\"Insaf Academy\" height='80px' width=\"auto\"/>\r\n            </Box>\r\n        </VStack>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\nimport { Can } from '../../hooks'\r\n\r\nconst Home = (props) => {\r\n    return(\r\n\r\n        <div>\r\n            <p>Home Page</p>\r\n            <Can I=\"read:any\" a=\"users\">\r\n            <button>Create Todo</button>\r\n            </Can>\r\n        </div>\r\n\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React,{useState,useEffect} from \"react\"\r\nimport {galleryAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst GalleryForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                thumbnail: {\r\n                    file: null,\r\n                    preview: public_path +\"\\\\\"+ data?.thumbnail\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('description', state?.description || '')\r\n        formData.append('thumbnail', state?.thumbnail?.file || data?.thumbnail)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? galleryAction.update(formData) : galleryAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Gallery' : 'Create New Gallery'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"gallery-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"gallery-form\" onSubmit={handleSubmit}>\r\n                    <Image objectFit='cover' boxSize='150px' rounded=\"0\" src={ state?.thumbnail?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} onClick={(e) => selectFile() }  />\r\n                    <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('thumbnail', e)} />\r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Gallery Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Gallery Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default GalleryForm","import React from 'react'\r\nimport {Heading, HStack, IconButton, Image,Text,Box} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst BoX= ({data, onEdit, onView, onDelete, active}) => {\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    return(\r\n         <Box bg=\"white\"  border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"sm\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}>\r\n            <Box>\r\n                <Image  objectFit='cover' w=\"100%\" h=\"150px\" rounded=\"0\" roundedTop=\"sm\" src={public_path +\"\\\\\"+ data?.thumbnail} />\r\n            </Box>\r\n            <Box px={2} py={2}>\r\n                <Heading size=\"md\" isTruncated>{data?.title}</Heading>\r\n                <Text fontSize=\"sm\" isTruncated>{data?.description}</Text>\r\n            </Box>\r\n            <HStack w='100%' p={2} justifyContent='flex-end' borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <IconButton onClick={onView} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"md-images\" color=\"brand.500\" />} />   \r\n                <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                <IconButton onClick={onDelete} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BoX;","import React,{useState,useEffect} from \"react\"\r\nimport {galleryAction} from '../../redux/actions'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image, VStack,Heading,FormLabel} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst ViewGallery= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState([])\r\n    const [errors, setErrors] = useState(null)\r\n    console.log(\"state:\",state)\r\n    const handleFileChange = (name, e,i) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            state[i][name]={file,preview:reader.result}\r\n            setState([...state])       \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const addImage=()=>{\r\n        setState([...state,{thumbnail:{file:'',preview:''},original:{file:'',preview:''}}])\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            let temp=data?.images?.map((image)=>{\r\n                image['thumbnail']={file:'',preview:public_path+\"\\\\\"+image.thumbnail}\r\n                image['original']={file:'',preview:public_path+\"\\\\\"+image.original}\r\n                return image\r\n            })\r\n            setState([...temp])       \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState([])\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (i) => {\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let photos=[state[i]?.thumbnail?.file,state[i]?.original?.file];\r\n        let formData = new FormData()\r\n        for (let i = 0; i < photos.length; i++) {\r\n            formData.append(`photos`, photos[i])\r\n        }\r\n        let action = galleryAction.addGalleryImage(formData,data?._id)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={data?.title}\r\n                size='md'\r\n                >\r\n                    <VStack alignItems='flex-start'>\r\n                      <Button onClick={addImage} size='sm' rounded='sm'>Add Image</Button>  \r\n                      {\r\n                          state?.map((data,d)=>\r\n                          <HStack key={'image-'+d}>\r\n                            <VStack alignItems='flex-start'>\r\n                                <Heading size='sm'>Thumbnail</Heading>\r\n                                <FormLabel className=\"center\" htmlFor={'thumbnail-'+d} height='100px' w='100px'>\r\n                                  <Image maxW='100%' maxH='100%' objectFit='cover' rounded=\"0\" src={data?.thumbnail?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} />\r\n                                </FormLabel>\r\n                               <Input id={'thumbnail-'+d} d=\"none\" type=\"file\" onChange={(e) => handleFileChange('thumbnail', e,d)} />\r\n                            </VStack>\r\n                            <VStack alignItems='flex-start'>\r\n                                <Heading size='sm'>Image</Heading>\r\n                                <FormLabel className=\"center\" htmlFor={'original-'+d} height='100px' w='120px'>\r\n                                  <Image maxW='100%' maxH='100%' objectFit='cover' rounded=\"0\" src={data?.original?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} />\r\n                                </FormLabel>\r\n                               <Input id={'original-'+d} d=\"none\" type=\"file\" onChange={(e) => handleFileChange('original', e,d)}/>\r\n                            </VStack>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' onClick={()=>{handleSubmit(d)}}>Save</Button>\r\n                          </HStack>\r\n                          )\r\n                      }\r\n                    </VStack>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default ViewGallery","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {galleryAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast,SimpleGrid} from \"@chakra-ui/react\"\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport GalleryForm from \"./galleryForm\"\r\nimport BoX from \"./box\"\r\nimport ViewGallery from \"./viewGallery\"\r\n\r\nconst Gallery = () => {\r\n    const navigate = useNavigate()\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [openGallery, setOpenGallery] = useBoolean(false)\r\n    const [editableGallery, setEditableGallery] = useState(null)\r\n    const [openViewGallery, setOpenViewGallery] = useBoolean(false)\r\n    const [editableViewGallery, setEditableViewGallery] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {gallerys} = useSelector(state => state?.gallery)\r\n    const handleEdit = (obj) => {\r\n        setEditableGallery(obj)\r\n        setOpenGallery.on()\r\n    }\r\n    const viewGallery=(gallery)=>{\r\n        setEditableViewGallery(gallery)\r\n        setOpenViewGallery.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(galleryAction.get())\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error\", err)\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteGallery= async(galleryID) => {\r\n        let result = await window.confirm('Do you really want to remove this Gallery?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(galleryAction.remove(galleryID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Gallery</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpenGallery.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading && <Loader />}\r\n            <VStack w='100%' px={4} py={5}>\r\n                {\r\n                    gallerys.length > 0 ?                        \r\n                    <SimpleGrid w='100%' columns={4} spacing={5}>\r\n                        {\r\n                            gallerys.map((gallery,g) =>\r\n                            <BoX onEdit={() => handleEdit(gallery) } onView={()=>{viewGallery(gallery)}} onDelete={() => deleteGallery(gallery?._id)} key={g} data={gallery}/>\r\n                        )}\r\n                    </SimpleGrid>\r\n                    :\r\n                    <Alert  rounded=\"md\" colorScheme=\"white\" py={5} shadow=\"lg\" center title=\"You have not created any gallery yet\">\r\n                        <VStack textAlign=\"center\" spacing={5}>\r\n                            <Text>Let us help you getting started</Text>\r\n                            <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpenGallery.on}>Create Gallery</Button>\r\n                        </VStack>\r\n                    </Alert>\r\n                }\r\n            </VStack>\r\n            <GalleryForm open={openGallery} data={editableGallery} onClose={() => { setEditableGallery(null); setOpenGallery.off()}}/>\r\n            <ViewGallery open={openViewGallery} data={editableViewGallery} onClose={()=>{ setEditableViewGallery(null); setOpenViewGallery.off() }}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Gallery","import React,{useState,useEffect} from \"react\"\r\nimport {newsAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image} from '@chakra-ui/react'\r\nimport { Drawer, Input,TextEditor} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst NewsForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                thumbnail: {\r\n                    file: null,\r\n                    preview: public_path +\"\\\\\"+ data?.thumbnail\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('date', state?.date || '')\r\n        formData.append('description', state?.description || '')\r\n        formData.append('detail', state?.detail || '')\r\n        formData.append('thumbnail', state?.thumbnail?.file || data?.thumbnail)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? newsAction.update(formData) : newsAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update News or Event' : 'Create News or Event'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"news-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"news-form\" onSubmit={handleSubmit}>\r\n                    <Image objectFit='cover' boxSize='150px' rounded=\"0\" src={ state?.thumbnail?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} onClick={(e) => selectFile() }  />\r\n                    <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('thumbnail', e)} />\r\n                    <HStack my=\"20px\">\r\n                       <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                       <Input date error={errors?.date?.message} label=\"Date\" value={state?.date || ''} onChange={(e) => handleInputChange('date', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack my=\"20px\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack>\r\n                        <TextEditor error={errors?.detail?.message} label=\"News or Event Detail\" value={state?.detail || ''} onChange={(value) => handleInputChange('detail', value )}/>\r\n                    </HStack>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default NewsForm","import React from 'react'\r\nimport {Heading, HStack, IconButton, Image,Text,Box} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst BoX= ({data, onEdit, onDelete, active}) => {\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleOnDelete = async () => {\r\n        let result = await window.confirm('Do you really want to remove this Slide?', 'Confirm');\r\n        if(result)\r\n            onDelete()\r\n    }\r\n\r\n    return(\r\n         <Box bg=\"white\"  border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"sm\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}>\r\n            <Box>\r\n                <Image  objectFit='cover' w=\"100%\" h=\"150px\" rounded=\"0\" roundedTop=\"sm\" src={public_path +\"\\\\\"+ data?.thumbnail} />\r\n            </Box>\r\n            <Box px={2} py={2}>\r\n                <Heading size=\"md\" isTruncated>{data?.title}</Heading>\r\n                <Text fontSize=\"sm\" isTruncated>{data?.description}</Text>\r\n            </Box>\r\n            <HStack w='100%' p={2} justifyContent='flex-end' borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                <IconButton onClick={handleOnDelete} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BoX;","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {newsAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast,SimpleGrid} from \"@chakra-ui/react\"\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport NewsForm from \"./newsForm\"\r\nimport BoX from \"./box\"\r\nconst News_Events = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {newses} = useSelector(state => state?.newses)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(newsAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteNews= async(newsID) => {\r\n            dispatch(newsAction.remove(newsID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>News & Events</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading && <Loader />}\r\n            <VStack w='100%' px={4} py={5}>\r\n                {\r\n                    newses.length > 0 ?                        \r\n                    <SimpleGrid columns={4} spacing={5} w='100%'>\r\n                        {\r\n                            newses.map((news,n) =>\r\n                            <BoX onEdit={() => handleEdit(news) } onDelete={() => deleteNews(news._id)} key={n} data={news}/>\r\n                        )}\r\n                    </SimpleGrid>\r\n                    :\r\n                    <Alert  rounded=\"md\" colorScheme=\"white\" py={5} shadow=\"lg\" center title=\"You have not created any News & Event yet\">\r\n                        <VStack textAlign=\"center\" spacing={5}>\r\n                            <Text>Let us help you getting started</Text>\r\n                            <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>Create News or Event</Button>\r\n                        </VStack>\r\n                    </Alert>\r\n                }\r\n            </VStack>\r\n            <NewsForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default News_Events","import React,{useState,useEffect} from \"react\"\r\nimport {tendersAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input,Select} from '../../ui-elements'\r\n\r\n\r\nconst TenderForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({status:'Open'})\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: file?.name\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                file: {\r\n                    file: null,\r\n                    preview: data?.file\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('release', state?.release || '')\r\n        formData.append('closing', state?.closing || '')\r\n        formData.append('status', state?.status || '')\r\n        formData.append('file', state?.file?.file || data?.file)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? tendersAction.update(formData) : tendersAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Tender' : 'Upload Tender'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"tender-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"tender-form\" onSubmit={handleSubmit}>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <HStack my=\"20px\">\r\n                        <Input date error={errors?.release?.message} label=\"Release Date\" value={state?.release || ''} onChange={(e) => handleInputChange('release', e.target.value )} />\r\n                        <Input date error={errors?.closing?.message} label=\"Closing Date\" value={state?.closing || ''} onChange={(e) => handleInputChange('closing', e.target.value )} />\r\n                    </HStack>\r\n                    <Box  my=\"20px\">                            \r\n                        <Select error={errors?.status?.message}  label=\"Status\" value={state?.status || ''} onChange={(e) => handleInputChange('status', e.target.value )}>\r\n                            <option value=\"Open\">Open</option>\r\n                            <option value=\"Close\">Close</option>\r\n                        </Select>\r\n                    </Box>\r\n                    <Box>\r\n                        <Input d=\"none\" file  label=\"Upload PDF\" error={errors?.file?.message} fileName={state?.file?.preview|| ''} ref={fileRef} onClick={() => selectFile()} onChange={(e) => handleFileChange('file', e)} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default TenderForm","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {tendersAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport TenderForm from \"./tenderForm\"\r\nconst Tenders = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {tenders} = useSelector(state => state?.tenders)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(tendersAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteTender= async(newsID) => {\r\n        let result = await window.confirm('Do you really want to remove this Tender?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(tendersAction.remove(newsID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Tenders</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        tenders?.length > 0 ?                        \r\n                        <Table bg='white' fontSize='sm' size='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Release</Th>\r\n                                    <Th>Closing</Th>\r\n                                    <Th>Status</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    tenders?.map((tender,t) =>\r\n                                    <Tr key={'tender-'+t}>\r\n                                        <Td>{t+1}</Td>\r\n                                        <Td>{tender?.title}</Td>\r\n                                        <Td>{tender?.release}</Td>\r\n                                        <Td>{tender?.closing}</Td>\r\n                                        <Td>{tender?.status}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(tender)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteTender(tender?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any Tender Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Tender</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <TenderForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Tenders","import React,{useState,useEffect} from \"react\"\r\nimport {jobsAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input,Select,TextEditor} from '../../ui-elements'\r\n\r\n\r\nconst JobForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({status:'Open'})\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let action = data ? jobsAction.update(state) : jobsAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Job' : 'Upload Job'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"job-form\">{data?'Update':'Upload'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"job-form\" onSubmit={handleSubmit}>\r\n                    <HStack my=\"20px\">\r\n                        <Input error={errors?.position?.message} label=\"Position\" value={state?.position || ''} onChange={(e) => handleInputChange('position', e.target.value )} />\r\n                        <Input error={errors?.department?.message} label=\"Department\" value={state?.department || ''} onChange={(e) => handleInputChange('department', e.target.value )} />\r\n                    </HStack>\r\n                    <Box my=\"20px\">\r\n                    <TextEditor error={errors?.detail?.message} label=\"Qualification & Experience\" value={state?.detail || ''} onChange={(value) => handleInputChange('detail', value )}/>\r\n                    </Box>\r\n                    <HStack my=\"20px\">\r\n                        <Input date error={errors?.release?.message} label=\"Release Date\" value={state?.release || ''} onChange={(e) => handleInputChange('release', e.target.value )} />\r\n                        <Input date error={errors?.closing?.message} label=\"Closing Date\" value={state?.closing || ''} onChange={(e) => handleInputChange('closing', e.target.value )} />\r\n                    </HStack>\r\n                    <Box  my=\"20px\">                            \r\n                        <Select error={errors?.status?.message}  label=\"Status\" value={state?.status || ''} onChange={(e) => handleInputChange('status', e.target.value )}>\r\n                            <option value=\"Open\">Open</option>\r\n                            <option value=\"Close\">Close</option>\r\n                        </Select>\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default JobForm","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {jobsAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport JobForm from \"./jobForm\"\r\nconst Jobs = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {jobs} = useSelector(state => state?.jobs)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(jobsAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteJob= async(jobID) => {\r\n        let result = await window.confirm('Do you really want to remove this Tender?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(jobsAction.remove(jobID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Jobs</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        jobs?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Position</Th>\r\n                                    <Th>Department</Th>\r\n                                    <Th>Qualification & Experience</Th>\r\n                                    <Th>Release</Th>\r\n                                    <Th>Closing</Th>\r\n                                    <Th>Status</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    jobs?.map((job,j) =>\r\n                                    <Tr key={'job-'+j}>\r\n                                        <Td>{j+1}</Td>\r\n                                        <Td>{job?.position}</Td>\r\n                                        <Td>{job?.department}</Td>\r\n                                        <Td dangerouslySetInnerHTML={{ __html: job?.detail }}></Td>\r\n                                        <Td>{job?.release}</Td>\r\n                                        <Td>{job?.closing}</Td>\r\n                                        <Td>{job?.status}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(job)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteJob(job?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any Job Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Job</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <JobForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Jobs","import React,{useState,useEffect} from \"react\"\r\nimport {downloadsAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\n\r\nconst DownloadForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: file?.name\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                file: {\r\n                    file: null,\r\n                    preview: data?.file\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('file', state?.file?.file || data?.file)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? downloadsAction.update(formData) : downloadsAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                size='md'\r\n                title={ data ? 'Update Downloadable Material' : 'Upload Downloadable Material'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"download-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"download-form\" onSubmit={handleSubmit}>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <Box>\r\n                        <Input d=\"none\" file  label=\"Upload PDF\" error={errors?.file?.message} fileName={state?.file?.preview|| ''} ref={fileRef} onClick={() => selectFile()} onChange={(e) => handleFileChange('file', e)} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default DownloadForm","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {downloadsAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport DownloadForm from \"./downloadForm\"\r\nconst Downloads = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {downloads} = useSelector(state => state?.downloads)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(downloadsAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteDownload= async(downloadID) => {\r\n        let result = await window.confirm('Do you really want to remove this Material?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(downloadsAction.remove(downloadID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Downloads</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        downloads?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    downloads?.map((download,d) =>\r\n                                    <Tr key={'download-'+d}>\r\n                                        <Td>{d+1}</Td>\r\n                                        <Td>{download?.title}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(download)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteDownload(download?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any Material Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Material</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <DownloadForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Downloads","import React,{useState,useEffect} from \"react\"\r\nimport {linksAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\n\r\nconst LinkForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({status:'Open'})\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let action = data ? linksAction.update(state) : linksAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Link' : 'Upload Link'}\r\n                size='md'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"link-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"link-form\" onSubmit={handleSubmit}>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.link?.message} label=\"Useful Link\" leftLabel='http://www.' value={state?.link || ''} onChange={(e) => handleInputChange('link', e.target.value )} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default LinkForm","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {linksAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport LinkForm from \"./linkForm\"\r\nconst UsefulLinks = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {links} = useSelector(state => state?.links)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(linksAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteJob= async(linkID) => {\r\n        let result = await window.confirm('Do you really want to remove this Tender?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(linksAction.remove(linkID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Useful Links</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        links?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Link</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    links?.map((link,l) =>\r\n                                    <Tr key={'link-'+l}>\r\n                                        <Td>{l+1}</Td>\r\n                                        <Td>{link?.title}</Td>\r\n                                        <Td>{link?.link}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(link)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteJob(link?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any useful link Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Link</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <LinkForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default UsefulLinks","import React,{useState,useEffect} from \"react\"\r\nimport {headlineAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input,TextEditor} from '../../ui-elements'\r\nconst HeadlineForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let action = data ? headlineAction.update(state) : headlineAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Headline' : 'Add New headline'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"headline-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"headline-form\" onSubmit={handleSubmit}>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack>\r\n                        <TextEditor error={errors?.detail?.message} label=\"Detail\" value={state?.detail || ''} onChange={(value) => handleInputChange('detail', value )}/>\r\n                    </HStack>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default HeadlineForm","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {headlineAction} from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport HeadlineForm from \"./headlineForm\"\r\nconst UsefulLinks = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {headlines} = useSelector(state => state?.headlines)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(headlineAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteHeadline= async(headlineID) => {\r\n        let result = await window.confirm('Do you really want to remove this Headline?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(headlineAction.remove(headlineID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Headlines</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        headlines?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Detail</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    headlines?.map((headline,h) =>\r\n                                    <Tr key={'headline-'+h}>\r\n                                        <Td>{h+1}</Td>\r\n                                        <Td>{headline?.title}</Td>\r\n                                        <Td dangerouslySetInnerHTML={{ __html: headline?.detail }}></Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(headline)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteHeadline(headline?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any Headlines Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Headline</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <HeadlineForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default UsefulLinks","import React,{useState,useEffect} from \"react\"\r\nimport {sliderAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst SliderForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                image: {\r\n                    file: null,\r\n                    preview: public_path +\"\\\\\"+ data?.image\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('description', state?.description || '')\r\n        formData.append('image', state?.image?.file || data?.image)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? sliderAction.update(formData) : sliderAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Slide' : 'Create Slide'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"slider-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"slider-form\" onSubmit={handleSubmit}>\r\n                    <Image objectFit='cover' boxSize='150px' rounded=\"0\" src={ state?.image?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} onClick={(e) => selectFile() }  />\r\n                    <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('image', e)} />\r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default SliderForm","import React from 'react'\r\nimport {Heading, HStack, IconButton, Image,Text,Box} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst BoX= ({data, onEdit, onDelete, active}) => {\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleOnDelete = async () => {\r\n        let result = await window.confirm('Do you really want to remove this Slide?', 'Confirm');\r\n        if(result)\r\n            onDelete()\r\n    }\r\n\r\n    return(\r\n         <Box bg=\"white\"  border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"sm\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}>\r\n            <Box>\r\n                <Image  objectFit='cover' w=\"100%\" h=\"150px\" rounded=\"0\" roundedTop=\"sm\" src={public_path +\"\\\\\"+ data?.image} />\r\n            </Box>\r\n            <Box px={2} py={2}>\r\n                <Heading size=\"md\" isTruncated>{data?.title}</Heading>\r\n                <Text fontSize=\"sm\" isTruncated>{data?.description}</Text>\r\n            </Box>\r\n            <HStack w='100%' p={2} justifyContent='flex-end' borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                <IconButton onClick={handleOnDelete} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BoX;","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {sliderAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast,SimpleGrid} from \"@chakra-ui/react\"\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport SliderForm from \"./sliderForm\"\r\nimport BoX from \"./box\"\r\nconst Slider = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {slider} = useSelector(state => state?.slider)\r\n\r\n    const handleEdit = (slide) => {\r\n        setEditable(slide)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(sliderAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteSlide= async(slideID) => {\r\n            dispatch(sliderAction.remove(slideID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Home Slider</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading && <Loader />}\r\n            <VStack w='100%' px={4} py={5}>\r\n                {\r\n                    slider.length > 0 ?                        \r\n                    <SimpleGrid columns={4} spacing={5}>\r\n                        {\r\n                            slider.map((slide,s) =>\r\n                            <BoX onEdit={() => handleEdit(slide) } onDelete={() => deleteSlide(slide._id)} key={s} data={slide}/>\r\n                        )}\r\n                    </SimpleGrid>\r\n                    :\r\n                    <Alert  rounded=\"md\" colorScheme=\"white\" py={5} shadow=\"lg\" center title=\"You have not created any Image Slide\">\r\n                        <VStack textAlign=\"center\" spacing={5}>\r\n                            <Text>Let us help you getting started</Text>\r\n                            <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>Create Slide</Button>\r\n                        </VStack>\r\n                    </Alert>\r\n                }\r\n            </VStack>\r\n            <SliderForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Slider","import React,{useState,useEffect} from \"react\"\r\nimport {videosAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst VideoForm= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                thumbnail: {\r\n                    file: null,\r\n                    preview: public_path +\"\\\\\"+ data?.thumbnail\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('link', state?.link || '')\r\n        formData.append('thumbnail', state?.thumbnail?.file || data?.thumbnail)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? videosAction.update(formData) : videosAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Video' : 'Upload Video'}\r\n                size='md'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"video-form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"video-form\" onSubmit={handleSubmit}>\r\n                    <Image objectFit='cover' boxSize='150px' rounded=\"0\" src={ state?.thumbnail?.preview || 'https://cdn.icon-icons.com/icons2/1993/PNG/512/frame_gallery_image_images_photo_picture_pictures_icon_123209.png'} onClick={(e) => selectFile() }  />\r\n                    <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('thumbnail', e)} />\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <Box>\r\n                        <Input  error={errors?.link?.message} label=\"Link\" leftLabel='youtube.com/watch?v=' value={state?.link || ''} onChange={(e) => handleInputChange('link', e.target.value )} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default VideoForm","import React from 'react'\r\nimport {Heading, HStack, IconButton, Image,Text,Box} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst BoX= ({data, onEdit, onDelete, active}) => {\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleOnDelete = async () => {\r\n        let result = await window.confirm('Do you really want to remove this Video?', 'Confirm');\r\n        if(result)\r\n            onDelete()\r\n    }\r\n\r\n    return(\r\n         <Box bg=\"white\"  border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"sm\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}>\r\n            <Box>\r\n                <Image  objectFit='cover' w=\"100%\" h=\"150px\" rounded=\"0\" roundedTop=\"sm\" src={public_path +\"\\\\\"+ data?.thumbnail} />\r\n            </Box>\r\n            <Box px={2} py={2}>\r\n                <Heading size=\"md\" isTruncated>{data?.title}</Heading>\r\n            </Box>\r\n            <HStack w='100%' p={2} justifyContent='flex-end' borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                <IconButton onClick={handleOnDelete} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default BoX;","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {videosAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast,SimpleGrid} from \"@chakra-ui/react\"\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport VideoForm from \"./videoForm\"\r\nimport BoX from \"./box\"\r\nconst Videos = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {videos} = useSelector(state => state?.videos)\r\n\r\n    const handleEdit = (slide) => {\r\n        setEditable(slide)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(videosAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteSlide= async(videoID) => {\r\n            dispatch(videosAction.remove(videoID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Videos</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading && <Loader />}\r\n            <VStack w='100%' px={4} py={5}>\r\n                {\r\n                    videos?.length > 0 ?                        \r\n                    <SimpleGrid columns={4} spacing={5} w='100%'>\r\n                        {\r\n                            videos?.map((video,v) =>\r\n                            <BoX onEdit={() => handleEdit(video) } onDelete={() => deleteSlide(video._id)} key={v} data={video}/>\r\n                        )}\r\n                    </SimpleGrid>\r\n                    :\r\n                    <Alert  rounded=\"md\" colorScheme=\"white\" py={5} shadow=\"lg\" center title=\"You have not uploaded any Video\">\r\n                        <VStack textAlign=\"center\" spacing={5}>\r\n                            <Text>Let us help you getting started</Text>\r\n                            <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>Upload Video</Button>\r\n                        </VStack>\r\n                    </Alert>\r\n                }\r\n            </VStack>\r\n            <VideoForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Videos","import React,{useState,useEffect} from \"react\"\r\nimport {locationsAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\n\r\nconst Form= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: file?.name\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                kmz: {\r\n                    file: null,\r\n                    preview: data?.kmz\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('kmz', state?.kmz?.file || data?.kmz)\r\n        if(data)\r\n        formData.append('_id', state?._id || '')\r\n        let action = data ? locationsAction.update(formData) : locationsAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                size='md'\r\n                title={ data ? 'Update Location' : 'Save Location'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"form\" onSubmit={handleSubmit}>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <Box>\r\n                        <Input d=\"none\" file  label=\"Upload (.kmz) \" error={errors?.kmz?.message} fileName={state?.kmz?.preview|| ''} ref={fileRef} onClick={() => selectFile()} onChange={(e) => handleFileChange('kmz', e)} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default Form","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {locationsAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport Form from \"./form\"\r\nconst Locations = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {locations} = useSelector(state => state?.locations)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(locationsAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteDownload= async(locationID) => {\r\n        let result = await window.confirm('Do you really want to remove this Location?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(locationsAction.remove(locationID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Locations(.kmz)</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        locations?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    locations?.map((location,l) =>\r\n                                    <Tr key={'location-'+l}>\r\n                                        <Td>{l+1}</Td>\r\n                                        <Td>{location?.title}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(location)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteDownload(location?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not Upload Any Location Yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Location</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <Form open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Locations","import React,{useState,useEffect} from \"react\"\r\nimport {teamAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\nconst Form= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({status:'Open'})\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let action = data ? teamAction.update(state) : teamAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update' : 'Upload '}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"form\">{data?'Update':'Upload'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"form\" onSubmit={handleSubmit}>\r\n                    <HStack my=\"20px\">\r\n                        <Input error={errors?.name?.message} label=\"Name\" value={state?.name || ''} onChange={(e) => handleInputChange('name', e.target.value )} />\r\n                        <Input error={errors?.designation?.message} label=\"Designation\" value={state?.designation || ''} onChange={(e) => handleInputChange('designation', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack>\r\n                        <Input type='email' error={errors?.email?.message} label=\"Email\" value={state?.email || ''} onChange={(e) => handleInputChange('email', e.target.value )} />\r\n                        <Input type='number' error={errors?.phone?.message} label=\"Phone\" value={state?.phone || ''} onChange={(e) => handleInputChange('phone', e.target.value )} />\r\n                    </HStack>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default Form","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {teamAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport Form from \"./form\"\r\nconst Team = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {team} = useSelector(state => state?.team)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(teamAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteJob= async(ID) => {\r\n        let result = await window.confirm('Do you really want to remove this Team Member?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(teamAction.remove(ID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Core Team</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        team?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Name</Th>\r\n                                    <Th>Designation</Th>\r\n                                    <Th>Email</Th>\r\n                                    <Th>Phone</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    team?.map((member,m) =>\r\n                                    <Tr key={'member-'+m}>\r\n                                        <Td>{m+1}</Td>\r\n                                        <Td>{member?.name}</Td>\r\n                                        <Td>{member?.designation}</Td>\r\n                                        <Td>{member?.email}</Td>\r\n                                        <Td>{member?.phone}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(member)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteJob(member?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not uploaded any team mate data yet.\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>Upload Team Mate</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <Form open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default Team","import React,{useState,useEffect} from \"react\"\r\nimport {socialLinksAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\n\r\nconst Form= ({open,data, onClose}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({link:'http://www.uaf.edu.pk/'})\r\n    const [errors, setErrors] = useState(null)\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let action = data ? socialLinksAction.update(state) : socialLinksAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Link' : 'Upload Link'}\r\n                size='md'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"form\">{data?'Update':'Save'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"form\" onSubmit={handleSubmit}>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </Box>\r\n                    <Box my=\"20px\">\r\n                        <Input error={errors?.link?.message} label=\"Useful Link\" value={state?.link || ''} onChange={(e) => handleInputChange('link', e.target.value )} />\r\n                    </Box>\r\n                </form>\r\n            </Drawer> \r\n    )\r\n}\r\nexport default Form","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {socialLinksAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Heading,VStack,HStack,Text,Button,IconButton,useToast, ButtonGroup} from \"@chakra-ui/react\"\r\nimport {Table,Thead,Tbody,Tr,Th,Td} from '@chakra-ui/react'\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport Form from \"./form\"\r\nconst SocialLinks = () => {\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {socialLinks} = useSelector(state => state?.socialLinks)\r\n\r\n    const handleEdit = (data) => {\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(socialLinksAction.get())\r\n            .then(() => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteJob= async(linkID) => {\r\n        let result = await window.confirm('Do you really want to remove this Link?', 'Confirm');\r\n        if(result)\r\n        {\r\n            dispatch(socialLinksAction.remove(linkID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })  \r\n        }      \r\n    }\r\n    return (\r\n        <VStack w='100%' h='100vh' overflowY='auto' spacing={0}>                        \r\n            <HStack w='100%' px={5} py={3} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Heading size=\"md\" m={0}>Social Links</Heading> \r\n                <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />               \r\n            </HStack>\r\n            {loading?<Loader />:\r\n                <VStack w='100%' px={5} py={5}>\r\n                    {\r\n                        socialLinks?.length > 0 ?                        \r\n                        <Table bg='white' size='sm' fontSize='sm'>\r\n                            <Thead>\r\n                                <Tr>\r\n                                    <Th>#</Th>\r\n                                    <Th>Title</Th>\r\n                                    <Th>Link</Th>\r\n                                    <Th>Operation</Th>\r\n                                </Tr>\r\n                            </Thead>\r\n                            <Tbody>\r\n                                {\r\n                                    socialLinks?.map((link,l) =>\r\n                                    <Tr key={'link-'+l}>\r\n                                        <Td>{l+1}</Td>\r\n                                        <Td>{link?.title}</Td>\r\n                                        <Td>{link?.link}</Td>\r\n                                        <Td>\r\n                                            <ButtonGroup size=\"xs\" rounded=\"full\" colorScheme=\"gray\">\r\n                                            <IconButton onClick={()=>{handleEdit(link)}}  icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                                            <IconButton onClick={()=>{deleteJob(link?._id)}} icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                                            </ButtonGroup>\r\n                                        </Td>\r\n                                    </Tr>\r\n                                )}\r\n                            </Tbody>\r\n                    </Table>\r\n                        :\r\n                        <Alert  rounded=\"sm\" colorScheme=\"white\" py={4} shadow=\"sm\" center title=\"You have not upload any social link yet\">\r\n                            <VStack textAlign=\"center\" spacing={5}>\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' rounded='sm' onClick={setOpen.on}>upload Link</Button>\r\n                            </VStack>\r\n                        </Alert>\r\n                    }\r\n                </VStack>\r\n            }\r\n            <Form open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}}/>\r\n        </VStack>\r\n    )\r\n}\r\nexport default SocialLinks","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { rolesAction, usersAction } from '../../redux/actions'\r\nimport { Box, Button, HStack, useBoolean, useToast, Text, Heading, Checkbox, CheckboxGroup } from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nimport InputMask from \"react-input-mask\";\r\n\r\nconst UserForm = ({open, data, onClose}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const toast = useToast()\r\n    const {roles} = useSelector(state => state.roles)\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [errors, setErrors] = useState(null)\r\n    const [state, setState] = useState({})\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(rolesAction.get())     \r\n        // eslint-disable-next-line       \r\n    }, [open])\r\n\r\n\r\n    useEffect(() => {\r\n        if(data && open){\r\n            var roles = []\r\n            data?.roles.map((role) => {\r\n                return roles.push(role?._id);\r\n            })\r\n            setState({...data, roles: roles})\r\n        }\r\n    }, [data, open])\r\n\r\n    const handleInputChange = (name, value) =>{\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        let action = data ? usersAction.update(state) : usersAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                handleClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })\r\n        \r\n    }\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n    \r\n    return(\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update User' : 'Create New User'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} type=\"submit\" form=\"user-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }           \r\n                >\r\n                    <form id=\"user-form\" onSubmit={handleSubmit}>\r\n                        <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">                            \r\n                            <Input error={errors?.first_name?.message} label=\"First Name\" value={state?.first_name || ''} onChange={(e) => handleInputChange('first_name', e.target.value )} />                        \r\n                            <Input error={errors?.last_name?.message} label=\"Last Name\" value={state?.last_name || ''} onChange={(e) => handleInputChange('last_name', e.target.value )} />\r\n                        </HStack>\r\n\r\n                        <HStack justifyContent=\"space-between\" spacing=\"5\"  my=\"20px\"  alignItems=\"flex-start\">                            \r\n                            <Input error={errors?.email?.message}  label=\"Email\" value={state?.email || ''} onChange={(e) => handleInputChange('email', e.target.value )} />                        \r\n                            <Input error={errors?.phone?.message}  label=\"Phone Number\" value={state?.phone || ''} onChange={(e) => handleInputChange('phone', e.target.value )} />\r\n                        </HStack>\r\n\r\n                        <HStack justifyContent=\"space-between\" spacing=\"5\"  my=\"20px\" alignItems=\"flex-start\">                            \r\n                            <Input as={InputMask} mask=\"99999-9999999-9\" maskChar=\"0\" error={errors?.cnic?.message}  label=\"CNIC\" value={state?.cnic || ''} onChange={(e) => handleInputChange('cnic', e.target.value )} />                        \r\n                        </HStack>\r\n\r\n                        <HStack justifyContent=\"space-between\" spacing=\"5\"  my=\"20px\" alignItems=\"flex-start\">                            \r\n                            <Input type=\"password\" error={errors?.password?.message}  label=\"Password\" value={state?.password || ''} onChange={(e) => handleInputChange('password', e.target.value )} />                        \r\n                            <Input type=\"password\" label=\"Confirm Password\" value={state?.confirm_password || ''} onChange={(e) => handleInputChange('confirm_password', e.target.value )} />\r\n                        </HStack>\r\n\r\n                        <Box>\r\n                            <Heading size=\"sm\" my=\"4\">Assign Roles</Heading>\r\n                            {\r\n                                errors?.roles &&\r\n                                <Text color=\"red.500\">{errors?.roles?.message}</Text>\r\n                            }\r\n                            <CheckboxGroup colorScheme=\"green\" value={state?.roles || []} onChange={(vals) => handleInputChange('roles', vals)}>\r\n                                <Box d=\"flex\" flexDir=\"column\">\r\n                                    {\r\n                                        roles.map((role, r) =>\r\n                                            <Checkbox key={r} value={role?._id}>{role?.name}</Checkbox>\r\n                                        )\r\n                                    }\r\n                                </Box>\r\n                            </CheckboxGroup>\r\n                        </Box>\r\n                        \r\n                    </form>\r\n            </Drawer>\r\n    )\r\n}\r\n\r\nexport default UserForm","import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { usersAction } from '../../redux/actions'\r\nimport { Box, HStack, Table, Thead, Tbody, Tr, Th, Td, IconButton, useBoolean, useToast } from \"@chakra-ui/react\"\r\nimport { Loader, Icon } from '../../ui-elements'\r\nimport UserForm from './UserForm'\r\n\r\nconst Users = (props) => {    \r\n    const dispatch = useDispatch()\r\n    const toast = useToast()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)    \r\n    const [editable, setEditable] = useState(null)\r\n    const {users} = useSelector(state => state.users)\r\n    useEffect(() => {\r\n        if(props?.data === 'NewUser'){\r\n            setOpen.on()            \r\n        }        \r\n        props?.resetData()\r\n        // eslint-disable-next-line\r\n    }, [props])\r\n\r\n   \r\n\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(usersAction.get())\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                toast({description: err?.error || err, status: 'error'})\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleEdit = (obj) => {\r\n        setEditable(obj)\r\n        setOpen.on()\r\n    }\r\n\r\n    \r\n    const deleteItem = async(id) => {\r\n        let result = await window.confirm('Do you really want to remove this user?', 'Confirm');\r\n        if(result){\r\n            dispatch(usersAction.remove(id))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }    \r\n\r\n    const getRoles = (user) => {\r\n        let roles = []\r\n        user?.roles?.map((role, r) =>\r\n            roles.push(role?.name)\r\n        )\r\n        return roles.join(' / ')\r\n    }\r\n    return(\r\n        <HStack  h='100vh' w=\"100%\" overflowY=\"auto\" alignItems=\"flex-start\">\r\n            <Box flex={1}>\r\n            {\r\n                loading ?\r\n                    <Loader />\r\n                :\r\n                <Box px=\"5\">\r\n                    <Table bg=\"white\" shadow=\"sm\" border=\"0\" size=\"sm\"  rounded=\"md\">\r\n                        <Thead>\r\n                            <Tr>\r\n                                \r\n                                <Th py=\"3\">Name</Th>                                \r\n                                <Th py=\"3\">Email</Th> \r\n                                <Th py=\"3\">CNIC</Th>\r\n                                <Th py=\"3\">Phone</Th>\r\n                                <Th py=\"3\">Status</Th>\r\n                                <Th py=\"3\">ROLES</Th>\r\n                                <Th py=\"3\"></Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {users.map((user, u) => \r\n                            <Tr key={u}>\r\n                                <Td>{user?.first_name} {user?.last_name}</Td>\r\n                                <Td>{user?.email}</Td>                                \r\n                                <Td>{user?.cnic}</Td>\r\n                                <Td>{user?.phone}</Td>\r\n                                <Td>{user?.status}</Td>\r\n                                <Td>\r\n                                    {getRoles(user)}\r\n                                </Td>\r\n                                <Td textAlign=\"right\">\r\n                                    <IconButton size=\"sm\" onClick={() => handleEdit(user)} rounded=\"full\" variant=\"ghost\" colorScheme=\"blue\"  icon={<Icon color=\"brand.500\" name=\"ios-create\" />} />\r\n                                    <IconButton size=\"sm\" onClick={() => deleteItem(user?._id)} rounded=\"full\" variant=\"ghost\" colorScheme=\"red\"  icon={<Icon color=\"red.500\" name=\"md-trash\" />} />\r\n                                </Td>\r\n                            </Tr>\r\n                            )}\r\n                        </Tbody>\r\n                    </Table>\r\n                </Box>\r\n            }\r\n            </Box>                 \r\n            <UserForm open={open} data={editable} onClose={() => {setOpen.off(); setEditable(null)}} />    \r\n        </HStack>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import React, {useState, useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { rolesAction } from '../../redux/actions'\r\nimport { Box, Heading, Button, HStack, useBoolean, useToast } from '@chakra-ui/react'\r\nimport { Drawer, Switch, Input} from '../../ui-elements'\r\nimport { resources } from '../../helpers'\r\n\r\nconst RoleForm = ({open, data, onClose}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const toast = useToast()\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState({\r\n        name: '',\r\n        permissions: {}\r\n    })\r\n\r\n    useEffect(() => {\r\n        if(open){\r\n            let permissions_obj = {}\r\n            resources.map((resource) => {\r\n                let resource_permissions = {}\r\n                resource.permissions.map((perm) => {\r\n                    return resource_permissions[perm?.name] = false\r\n                })\r\n                return permissions_obj[resource?.name] = resource_permissions\r\n            })\r\n            setState({\r\n                ...state,\r\n                permissions: permissions_obj\r\n            })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState(data)\r\n        }\r\n    }, [data, open])\r\n\r\n    const handleInputChange = (name, value) =>{\r\n        setState({\r\n            ...state,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        let action = data ? rolesAction.update(state) : rolesAction.add(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                handleClose()        \r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error\", err)\r\n                setSubmitting.off()\r\n            })\r\n        \r\n    }\r\n\r\n    const handleClose = () => {\r\n        setState({\r\n            name: '',\r\n            permissions: {}\r\n        })\r\n        onClose()\r\n    }\r\n    const handlePermissionChange = (type, per, target) => {\r\n        setState({\r\n            ...state,\r\n            permissions:{\r\n                ...state.permissions,\r\n                [type]: {\r\n                    ...state?.permissions[type],\r\n                    [per]: target.checked\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    return(\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Role' : 'Create New Role'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} type=\"submit\" form=\"role-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }           \r\n                >\r\n                    <form id=\"role-form\" onSubmit={handleSubmit}>\r\n                        <Box my=\"3\" p=\"6\"  rounded=\"md\" bg=\"gray.50\">\r\n                            <Input label=\"Role Name\" value={state?.name} onChange={(e) => handleInputChange('name', e.target.value )} />\r\n                        </Box>\r\n                        {\r\n                            resources.map((resource, r) =>\r\n                            <Box my=\"3\" key={r} rounded=\"md\" bg=\"gray.50\">\r\n                                <Heading m=\"0\" p=\"6\" pb=\"0\"  size=\"sm\">{resource.label}</Heading>\r\n                                <Box  p=\"6\">\r\n                                    {\r\n                                        resource.permissions.map((permission, p) =>\r\n                                        <Box key={p}>\r\n                                            <Switch isChecked={state?.permissions?.[resource?.name]?.[permission?.name] || false}  onChange={(e) => handlePermissionChange(resource?.name, permission?.name, e.target) } label={permission?.description} />\r\n                                        </Box>\r\n                                        )\r\n                                    }\r\n                                </Box>\r\n                            </Box>\r\n                            )\r\n                    }\r\n                    </form>\r\n            </Drawer>\r\n    )\r\n}\r\n\r\nexport default RoleForm","import React, {useEffect, useState} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { rolesAction } from '../../redux/actions'\r\nimport { Box, HStack, Table, Thead, Tbody, Tr, Th, Td, IconButton, useBoolean, useToast } from \"@chakra-ui/react\"\r\nimport { Loader, Icon} from '../../ui-elements'\r\nimport RoleForm from './RoleForm'\r\n\r\nconst Roles = (props) => {\r\n    const dispatch = useDispatch()\r\n    const toast = useToast()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const [open, setOpen] = useBoolean(false)    \r\n    const {roles} = useSelector(state => state.roles)\r\n\r\n    useEffect(() => {\r\n        if(props?.data === 'NewRole'){\r\n            setOpen.on()            \r\n        }\r\n        props?.resetData()\r\n        // eslint-disable-next-line\r\n    }, [props])\r\n\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(rolesAction.get())\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                toast({description: err?.error || err, status: 'error'})\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const handleEdit = (obj) => {\r\n        setEditable(obj)\r\n        setOpen.on()\r\n    }\r\n\r\n    const deleteItem = async(id) => {\r\n        let result = await window.confirm('Do you really want to remove this role?', 'Confirm');\r\n        if(result){\r\n            dispatch(rolesAction.remove(id))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }\r\n\r\n    return(\r\n        <HStack  h='100vh' w=\"100%\" overflowY=\"auto\" alignItems=\"flex-start\">\r\n            <Box flex={1}>\r\n            {\r\n                loading ?\r\n                    <Loader />\r\n                :\r\n                <Box px=\"5\">\r\n                    <Table bg=\"white\" shadow=\"sm\" border=\"0\" size=\"sm\"  rounded=\"md\">\r\n                        <Thead>\r\n                            <Tr>\r\n                                \r\n                                <Th py=\"3\">Role</Th>                                \r\n                                <Th py=\"3\"></Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {roles.map((role, r) => \r\n                            <Tr key={r} onClick={() => handleEdit(role)} cursor=\"pointer\" _hover={{ bg: 'gray.50' }}>\r\n                                <Td>{role?.name}</Td>                                \r\n                                <Td textAlign=\"right\" onClick={(e) => e.stopPropagation()}>                                    \r\n                                    <IconButton size=\"sm\" onClick={() => deleteItem(role._id)} rounded=\"full\" variant=\"ghost\" colorScheme=\"red\"  icon={<Icon color=\"red.500\" name=\"md-trash\" />} />\r\n                                </Td>\r\n                            </Tr>\r\n                            )}\r\n                        </Tbody>\r\n                    </Table>\r\n                </Box>\r\n            }\r\n            </Box>\r\n            <RoleForm open={open} data={editable} onClose={() => {setOpen.off(); setEditable(null)}} />\r\n            \r\n          \r\n        </HStack>\r\n    )\r\n}\r\n\r\n\r\nexport default Roles;","import React, {useState} from 'react'\r\nimport { Routes as Switch, Route, useLocation, useNavigate, NavLink } from \"react-router-dom\";\r\nimport { Box, Heading, HStack, Button, Menu, MenuButton, MenuItem, MenuList } from \"@chakra-ui/react\"\r\nimport { Icon } from '../../ui-elements';\r\nimport AllUsers from './Users'\r\nimport Roles from './Roles'\r\n\r\nconst Users = (props) => {   \r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const [state, setState] = useState(null)\r\n\r\n    const goTo = (to, data) => {\r\n        setState(data)\r\n        navigate(to)\r\n    }\r\n    return(\r\n        <HStack  h='100vh' w=\"100%\" overflowY=\"auto\" alignItems=\"flex-start\">\r\n            <Box flex={1} px=\"3\">\r\n                <Box px=\"7\" py=\"5\">\r\n                    <Heading size=\"md\" m=\"0\">User Management</Heading>\r\n                </Box>\r\n                <HStack px=\"5\" py=\"4\" justifyContent=\"space-between\">\r\n                    <Box  borderBottom=\"0px solid\" borderColor=\"brand.500\">\r\n                        <Button h=\"48px\" colorScheme=\"gray\" rounded=\"0\" borderBottom=\"2px solid\" borderColor={location?.pathname === '/users' ? 'brand.500' : 'transparent'} variant=\"ghost\" bg=\"transparent\" mx=\"2\" as={NavLink} to=\"/users\">Users</Button>\r\n                        <Button  h=\"48px\" colorScheme=\"gray\" rounded=\"0\" borderBottom=\"2px solid\" borderColor={location?.pathname === '/users/roles' ? 'brand.500' : 'transparent'} variant=\"ghost\" mx=\"2\" as={NavLink} to=\"/users/roles\">Roles</Button>\r\n                    </Box>\r\n                    <Box>\r\n                    <Menu>\r\n                        <MenuButton size=\"sm\" colorScheme=\"brand\" as={Button} rightIcon={<Icon name=\"md-arrow-dropdown\" color=\"white\" />}>\r\n                            Create...\r\n                        </MenuButton>\r\n                        <MenuList>\r\n                            <MenuItem onClick={() => goTo('/users', 'NewUser')}>New User</MenuItem>\r\n                            <MenuItem onClick={() => goTo('/users/roles', 'NewRole') }>New Role</MenuItem>                            \r\n                        </MenuList>\r\n                        </Menu>\r\n                    </Box>\r\n                </HStack>\r\n\r\n                <Switch>                                                        \r\n                    <Route exact path=\"/\"  element={<AllUsers resetData={() => setState(null)} data={state} />} />\r\n                    <Route exact path=\"/roles\" element={<Roles resetData={() => setState(null)} data={state} />} />\r\n                </Switch>\r\n            </Box>                 \r\n        </HStack>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction, usersAction } from '../../redux/actions'\r\nimport { useSelector,useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast, Image} from '@chakra-ui/react'\r\nimport { Drawer, Input, Select} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst SubjectForm= ({open,data, onClose, ...props}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const {classes} = useSelector(state => state.subjects)\r\n    const {users} = useSelector(state => state.users)\r\n    const fileRef = React.useRef()    \r\n\r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0];   \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch(usersAction.get())     \r\n        \r\n        // eslint-disable-next-line\r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data,\r\n                assignedTo: data?.assignedTo?._id || '',\r\n                class: data?.class?._id || '',\r\n                thumbnail: {\r\n                    file: null,\r\n                    preview: public_path + data?.thumbnail\r\n                }\r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)\r\n        let formData = new FormData()\r\n        formData.append('title', state?.title || '')\r\n        formData.append('description', state?.description || '')\r\n        formData.append('class', state?.class || '')\r\n        formData.append('assignedTo', state?.assignedTo || '')\r\n        formData.append('thumbnail', state?.thumbnail?.file || '')\r\n        \r\n        let action = data ? subjectsAction.update(formData, data?._id) : subjectsAction.add(formData)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Subject' : 'Create New Subject'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} type=\"submit\" form=\"subject-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"subject-form\" onSubmit={handleSubmit}>\r\n                    \r\n                    <Image objectFit='cover' boxSize='150px' rounded=\"0\" src={ state?.thumbnail?.preview || 'https://bit.ly/broken-link'} onClick={(e) => selectFile() }  />\r\n                    <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('thumbnail', e)} />\r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Subject Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\"  my=\"20px\"  alignItems=\"flex-start\">                            \r\n                        <Select error={errors?.class?.message}  label=\"Class\" value={state?.class || ''} onChange={(e) => handleInputChange('class', e.target.value )}>\r\n                            <option value=\"\">Select...</option>\r\n                            {\r\n                                classes.map((cls, c) =>\r\n                                <option key={c} value={cls._id}>{cls.title}</option>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                        <Select error={errors?.assignedTo?.message}  label=\"Assigned To\" value={state?.assignedTo || ''} onChange={(e) => handleInputChange('assignedTo', e.target.value )}>\r\n                            <option value=\"\">Select...</option>\r\n                            {\r\n                                users.map((user, u) =>\r\n                                <option key={u} value={user._id}>{user.first_name} {user.last_name}</option>\r\n                                )\r\n                            }\r\n                        </Select>\r\n                    </HStack>\r\n\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default SubjectForm","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction,usersAction } from '../../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\n\r\nconst ClassForm = ({ open,data, onClose, ...props}) => {\r\n\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)    \r\n\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(usersAction.get())             \r\n        // eslint-disable-next-line\r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({\r\n                ...data                \r\n            })            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)        \r\n        let action = data ? subjectsAction.update_class(state, data?._id) : subjectsAction.add_class(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Class' : 'Create New Class'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} type=\"submit\" form=\"class-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"class-form\" onSubmit={handleSubmit}>\r\n                    \r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Class Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>                    \r\n\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default ClassForm","import React from 'react'\r\nimport { Box, Heading, HStack,Text, IconButton} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\n\r\nconst ClassCard = ({data, onClick, onEdit, onDelete, active, ...props}) => {\r\n\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleOnDelete = async (e) => {\r\n        e.stopPropagation()\r\n        let result = await window.confirm('Do you really want to remove this Class?', 'Confirm');\r\n        if(result)\r\n            onDelete(data?._id)\r\n    }\r\n\r\n    return(\r\n        <Box bg=\"white\" onClick={() => onClick(data?._id)} border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"md\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}  {...props}>\r\n            <Box p=\"4\">\r\n                <Heading size=\"md\">{data?.title}</Heading>\r\n                <Text fontSize=\"sm\">{data?.description}</Text>\r\n            </Box>\r\n            <HStack px=\"4\" py=\"2\" justifyContent=\"space-between\" borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <Box>\r\n                    <Icon name=\"ios-book\" mr=\"2\" />\r\n                    <Text as=\"span\" fontSize=\"sm\">{data?.subjects?.length || 0}</Text>\r\n                </Box>\r\n                <HStack spacing=\"3\">\r\n                    <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"blue\" icon={<Icon fontSize=\"12px\" name=\"ios-create\" color=\"white\" />} />\r\n                    <IconButton onClick={handleOnDelete} size=\"xs\" rounded=\"full\" colorScheme=\"red\" icon={<Icon  fontSize=\"12px\" name=\"ios-trash\" color=\"white\" />} />                    \r\n                </HStack>\r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ClassCard;","import React from 'react'\r\nimport { Box, Heading, HStack, IconButton, Image} from \"@chakra-ui/react\"\r\nimport { Icon} from '../../ui-elements'\r\nimport { public_path } from '../../config.json'\r\n\r\nconst SubjectCard = ({data, onClick, onEdit, onDelete, active, ...props}) => {\r\nconsole.log(\"data:\",data.thumbnail)\r\n\r\nconsole.log(\"publicpath:\",public_path)\r\n    const handleOnEdit = (e) => {\r\n        e.stopPropagation()\r\n        onEdit(data)\r\n    }\r\n\r\n    const handleOnDelete = async (e) => {\r\n        e.stopPropagation()\r\n        let result = await window.confirm('Do you really want to remove this Class?', 'Confirm');\r\n        if(result)\r\n            onDelete(data?._id)\r\n    }\r\n\r\n    return(\r\n        <Box bg=\"white\" onClick={() => onClick(data?._id)} border=\"2px solid\" borderColor={active ? 'brand.500' : 'transparent' } rounded=\"md\" cursor=\"pointer\" _hover={{ borderColor: 'gray.300' }}  {...props}>\r\n            <Box>\r\n                <Image  objectFit='cover' w=\"100%\" h=\"150px\" rounded=\"0\" roundedTop=\"md\" src={public_path +\"\\\\\"+ data?.thumbnail} />\r\n            </Box>\r\n            <Box p=\"4\">\r\n                <Heading size=\"md\">{data?.title} - {data?.class?.title}</Heading>\r\n                {/* <Text fontSize=\"sm\">{data?.description}</Text> */}\r\n            </Box>\r\n            <HStack px=\"4\" py=\"2\" justifyContent=\"space-between\" borderTop=\"1px solid\" borderColor=\"gray.100\">\r\n                <Box>\r\n                    {/* <Icon name=\"ios-book\" mr=\"2\" /> */}\r\n                </Box>\r\n                <HStack spacing=\"3\">\r\n                    <IconButton onClick={handleOnEdit} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon fontSize=\"14px\" name=\"ios-create\" color=\"gray.500\" />} />\r\n                    <IconButton onClick={handleOnDelete} size=\"xs\" rounded=\"full\" colorScheme=\"gray\" icon={<Icon  fontSize=\"14px\" name=\"ios-trash\" color=\"red.500\" />} />                    \r\n                </HStack>\r\n            </HStack>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SubjectCard;","import React,{useState,useEffect} from \"react\"\r\nimport {useSelector,useDispatch } from 'react-redux'\r\nimport {subjectsAction } from '../../redux/actions'\r\nimport {useAbility} from '../../hooks'\r\nimport SubjectForm from \"./subjectForm\"\r\nimport ClassForm from \"./ClassForm\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport {useBoolean, Box, Heading,VStack,HStack,Text,Button,IconButton,useToast} from \"@chakra-ui/react\"\r\nimport { Loader,Icon, Alert} from '../../ui-elements'\r\nimport ClassCard from \"./ClassCard\"\r\nimport SubjectCard from \"./SubjectCard\"\r\n\r\nconst Subjects = () => {\r\n    const navigate = useNavigate()\r\n    const ability = useAbility()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [activeClass, setActiveClass] = useState(null)\r\n    const [classOpen, setClassOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const [classEditable, setClassEditable] = useState(null)\r\n    const toast = useToast()\r\n    const dispatch=useDispatch();\r\n    const {subjects, classes} = useSelector(state => state?.subjects)\r\n    \r\n    const handleEdit = (obj) => {\r\n        setEditable(obj)\r\n        setOpen.on()\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(subjectsAction.clear_subjects())\r\n        // eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {          \r\n        setLoading.on()\r\n        dispatch(subjectsAction.get_classes())\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"Error\", err)\r\n                setLoading.off()\r\n            })\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const deleteItem = async(id) => {\r\n        let result = await window.confirm('Do you really want to remove this Subject?', 'Confirm');\r\n        if(result){\r\n            dispatch(subjectsAction.remove(id))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }    \r\n\r\n    const handleClassDelete = (id) => {\r\n        dispatch(subjectsAction.remove_class(id))\r\n        .then((res) => {\r\n            // toast({description: res.message, status: 'success'})\r\n        })\r\n        .catch((err) => {\r\n            // toast({description: err.error, status: 'error'})\r\n        })        \r\n    }\r\n\r\n    const getSubjects = (id) => {\r\n        setLoading.on()\r\n        setActiveClass(id)\r\n        dispatch(subjectsAction.get(id))\r\n            .then((res) => {\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n                console.log(\"Error\", err)\r\n            })\r\n    }\r\n\r\n    console.log(\"Subjects\", subjects)\r\n    return (\r\n        <Box w='100%'>                        \r\n            <HStack p=\"5\" bg=\"gray.200\" flexWrap=\"wrap\" spacing=\"4\"  alignItems=\"stretch\" justifyContent=\"flex-start\">\r\n                {\r\n                    classes.map((cls, c) =>\r\n                        <ClassCard active={activeClass === cls._id} onClick={(id) => getSubjects(id)} onEdit={(obj) => {setClassEditable(obj); setClassOpen.on() }} onDelete={(id) => handleClassDelete(id)} key={c} data={cls} w=\"16.666667%\" />\r\n                    )\r\n                }\r\n                <Box w=\"16.666667%\" onClick={setClassOpen.on} display=\"flex\" alignItems=\"center\" cursor=\"pointer\" justifyContent=\"center\" rounded=\"md\"  border=\"2px dashed\"  borderColor=\"gray.600\" _hover={{ borderColor: 'brand.500' }}>\r\n                    <VStack>\r\n                        <Icon name=\"ios-add-circle\" fontSize=\"24px\" />\r\n                        <Text fontSize=\"sm\">Add New Class</Text>\r\n                    </VStack>\r\n                </Box>\r\n            </HStack>\r\n            <HStack w='100%' px=\"5\" py=\"4\">\r\n                <Heading size=\"md\">Subjects</Heading> \r\n                {\r\n                    ability.can('create:own', 'subjects') &&\r\n                    <IconButton colorScheme=\"gray\" variant=\"ghost\" rounded=\"full\" ml=\"2\" onClick={setOpen.on} size=\"sm\" icon={<Icon fontSize=\"24px\" color=\"brand.500\" name=\"ios-add\" />} />\r\n                }                \r\n            </HStack>\r\n            {loading && <Loader />}\r\n            <Box p=\"5\">\r\n                {\r\n                    subjects ? \r\n                        subjects.length > 0 ?                        \r\n                        <HStack flexWrap=\"wrap\" spacing=\"5\"  alignItems=\"stretch\" justifyContent=\"flex-start\">\r\n                            {\r\n                                subjects.map((subject, s) =>\r\n                                <SubjectCard onClick={(id) => navigate('/subjects/'+id)} onEdit={(obj) => handleEdit(obj) } onDelete={(id) => deleteItem(id)} key={s} data={subject} w=\"20%\" />\r\n                            )}\r\n                        </HStack>\r\n                        :\r\n                        <Alert rounded=\"md\" colorScheme=\"white\" py=\"8\" shadow=\"lg\" center title=\"You have not created any subjects yet\">\r\n                            <Box textAlign=\"center\">\r\n                                <Text>Let us help you getting started</Text>\r\n                                <Button mt=\"4\"  size='sm' onClick={setOpen.on}>Create Subject</Button>\r\n                            </Box>\r\n                        </Alert>\r\n                    :\r\n                        <Alert status=\"info\">\r\n                            Please click on the class above to see the subjects\r\n                        </Alert>\r\n                }\r\n            </Box>\r\n            {/* {\r\n              \r\n                <VStack w='100%'>\r\n                    \r\n                    \r\n                    \r\n\r\n                    <Table bg=\"white\" shadow=\"sm\" border=\"0\" size=\"sm\"  rounded=\"md\">\r\n                        <Thead>\r\n                            <Tr>\r\n                                <Th w='120px'>Thumbnail</Th>\r\n                                <Th>Title</Th>\r\n                                <Th>Description</Th>                                \r\n                                <Th>Class</Th>\r\n                                <Th>Assigned To</Th>                                \r\n                                <Th w='100px'>Action</Th>\r\n                            </Tr>\r\n                        </Thead>\r\n                        <Tbody>\r\n                            {subjects?.map((data,i) => \r\n                            <Tr key={i}>\r\n                                <Td><Image boxSize=\"56px\" src={data?.thumbnail && public_path+data?.thumbnail} alt={data?.title} /></Td>\r\n                                <Td><Link to='/subjects/12345'>{data?.title}</Link></Td>                                \r\n                                <Td>{data?.description}</Td>\r\n                                <Td>{data?.class?.title}</Td>\r\n                                <Td>{data?.assignedTo?.first_name } {data?.assignedTo?.last_name }</Td>\r\n                                <Td>\r\n                                    {\r\n                                         ability.can('update:any', 'subjects')?\r\n                                         <IconButton size=\"sm\" onClick={() => handleEdit(data)} rounded=\"full\" variant=\"ghost\" colorScheme=\"blue\"  icon={<Icon color=\"brand.500\" name=\"ios-create\" />} />:''\r\n                                    }\r\n                                    {\r\n                                        ability.can('delete:any', 'subjects')?\r\n                                        <IconButton size=\"sm\" onClick={() => deleteItem(data._id)} rounded=\"full\" variant=\"ghost\" colorScheme=\"red\"  icon={<Icon color=\"red.500\" name=\"md-trash\" />} />:''\r\n                                    }\r\n                                    \r\n                                </Td>\r\n                            </Tr>\r\n                            )}\r\n                        </Tbody>\r\n                    </Table>\r\n               </VStack>\r\n            } */}\r\n            <SubjectForm open={open} data={editable} onClose={() => { setEditable(null); setOpen.off()}} />\r\n            <ClassForm open={classOpen} data={classEditable} onClose={() => { setClassEditable(null); setClassOpen.off()}} />\r\n        </Box>\r\n    )\r\n}\r\nexport default Subjects","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction } from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nconst ChapterForm= ({open,data, onClose,subject, ...props}) => {\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n\r\n\r\n \r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(open,subject){\r\n            setState({subject:subject,order:'0'})\r\n        }\r\n        if(data && open){\r\n            setState({...data,order:'0'})            \r\n        }\r\n    }, [data, open,subject])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)    \r\n        let action = data ? subjectsAction.updateChapter(state, data?._id) : subjectsAction.addChapter(state)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Chapter' : 'Create New Chapter'}\r\n                size='sm'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} size='sm' rounded='sm' type=\"submit\" form=\"subject-form\">{data?'Update':'Submit'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"subject-form\" onSubmit={handleSubmit}>\r\n    \r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Chapter Title\" defaultValue={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Chapter Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                   \r\n\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default ChapterForm","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction } from '../../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input} from '../../ui-elements'\r\nconst TopicForm= ({open,data, onClose,chapterID}) => {\r\n \r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n \r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        if(open){\r\n            setState({order:'0'})\r\n        }\r\n        if(data && open){\r\n            setState({...data,order:'0'})            \r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)    \r\n        let action = data ? subjectsAction.updateTopic(state,chapterID) : subjectsAction.addTopic(state,chapterID)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Topic' : 'Create New Topic'}\r\n                size='sm'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button rounded='sm' size='sm' isLoading={submitting} type=\"submit\" form=\"topic-form\">{data?'Update':'Submit'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"topic-form\" onSubmit={handleSubmit}>\r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Topic Title\" defaultValue={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default TopicForm","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction} from '../../redux/actions'\r\nimport {useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack,VStack, useToast} from '@chakra-ui/react'\r\nimport { Drawer, Input,QSwitch} from '../../ui-elements'\r\nconst QuizForm= ({open,data,contentType,onClose}) => {\r\n\r\nconsole.log(\"data:\",data)\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    console.log(\"data:\",data)\r\n    const handleInputChange= (name,value) => {\r\n        if(name==='Easy'||name==='Medium'||name==='Hard')\r\n        {\r\n            setState((state)=>{\r\n                state.difficulty[name]=value\r\n                return {...state}\r\n            })\r\n            return\r\n        }\r\n        setState({...state,[name]:value})\r\n        console.log(state)\r\n    }\r\n    useEffect(() => {\r\n        if(open){\r\n            setState({type:contentType?.type,difficulty:{Easy:40,Medium:40,Hard:20},duration:'90',passingGrade:'45',random:true})     \r\n        }   \r\n    }, [open,contentType])\r\n    useEffect(() => {\r\n        if(data && open){\r\n            setState({...data?.content,...data,content:data?.content?._id})            \r\n        }\r\n    }, [data, open])\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setSubmitting.on()\r\n        setErrors(null)   \r\n        let action = data ? subjectsAction.updateContent(state,false,contentType.topicID,contentType.chapterID) : subjectsAction.addContent(state,false,contentType.topicID,contentType.chapterID)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            }) \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update Quiz' : 'Create New Quiz'}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button rounded='sm' isLoading={submitting} type=\"submit\" form=\"subject-form\">{data?'Update':'Submit'}</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"subject-form\" onSubmit={handleSubmit}>\r\n\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Quiz Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Quiz Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <QSwitch input label='Quiz Duration(min)' value={state?.duration || ''} onChange={(e) => handleInputChange('duration',e.target.value )}/>\r\n                        <QSwitch input label='Passing Grade(%)' value={state?.passingGrade || ''}  onChange={(e) => handleInputChange('passingGrade',e.target.value )}/>\r\n                        <QSwitch radio label='Random Questions' value={state?.random || ''}  onChange={(e) => handleInputChange('random',e.target.checked )}/>\r\n                    </HStack>\r\n                    <VStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <QSwitch label='Difficulty Level(%)'/>\r\n                        <HStack>\r\n                            <QSwitch input value={state?.difficulty?.Easy} onChange={(e) => handleInputChange('Easy',e.target.value )} placeholder='Easy'/>\r\n                            <QSwitch input value={state?.difficulty?.Medium} onChange={(e) => handleInputChange('Medium',e.target.value )} placeholder='Medium'/>\r\n                            <QSwitch input value={state?.difficulty?.Hard} onChange={(e) => handleInputChange('Hard',e.target.value )} placeholder='Hard'/>\r\n                        </HStack>\r\n                    </VStack>\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default QuizForm","import React,{useState,useEffect} from \"react\"\r\nimport {questionBankAction } from '../../redux/actions'\r\nimport { useDispatch,useSelector} from 'react-redux'\r\nimport {useAbility} from '../../hooks'\r\nimport {useBoolean, Button,Text, Box, HStack, useToast,Heading, VStack,Tag,TagCloseButton,TagLabel,Checkbox,Spacer,Switch} from '@chakra-ui/react'\r\nimport { Drawer,Icon,TextEditor,Input,Level} from '../../ui-elements'\r\nimport { Tabs, TabList, TabPanels, Tab, TabPanel } from '@chakra-ui/react'\r\nimport {\r\n    Alert,\r\n    AlertIcon,\r\n    AlertDescription,\r\n  } from '@chakra-ui/react'\r\nconst ViewQuizForm= ({open,IDs, onClose}) => {\r\n    const ability = useAbility()\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const {quizQuestions,questionBankTagQuestions}=useSelector(state => state.questionBank)\r\n    const userID=useSelector(state => state.auth.user._id)\r\n    console.log(ability.can('create:own', 'questions'))\r\n    //\r\n    const [state,setState]=useState({currentQuestion:null,questions:[]})\r\n    const [qBTagQuestions,setQBTagQuestions]=useState([])\r\n    const [qQuestions,setQQuestions]=useState([])\r\n    const [tags,setTags]=useState([])\r\n\r\n\r\n    const handleInputChange=(e,key)=>{\r\n        if(key===188)\r\n        {\r\n            setTags(()=>{\r\n                let tempTag='';\r\n                console.log(e.target.value)\r\n                for(let i=0;i<e.target.value.length;i++)\r\n                 {\r\n                     if(i===e.target.value.length-1)\r\n                     {\r\n                        e.target.value=''\r\n                        break;\r\n                     }\r\n                     tempTag+=e.target.value[i]\r\n                 }\r\n                return  [...tags,tempTag]\r\n            })\r\n        }\r\n        else if(key===13)\r\n        getQuestions()\r\n        \r\n    }\r\n    const changeLevel=(value)=>{\r\n        state.questions[state?.currentQuestion].difficulty=value;\r\n        setState({...state})\r\n    }\r\n    const handleQuestionTags=(e,key)=>{\r\n        if(key===13)\r\n        {\r\n            state.questions=state?.questions.map((question,q)=>{\r\n                if(q===state.currentQuestion)\r\n                question.tags=[...question.tags,e.target.value] \r\n                return question\r\n            })\r\n            setState({...state})\r\n            e.target.value=''\r\n        }     \r\n    }\r\n    const getQuestions=()=>{\r\n        if(ability.can('read:any', 'questions'))\r\n        dispatch(questionBankAction.getByTags({tags},IDs.quizID))\r\n        else if(ability.can('read:own', 'questions'))\r\n        dispatch(questionBankAction.getByTags({tags},IDs.quizID,userID))\r\n\r\n    }\r\n    const addQuestionFromQB=(check,q,ID)=>{\r\n        if(check)\r\n            setQBTagQuestions([...qBTagQuestions,questionBankTagQuestions[q]._id])\r\n        else\r\n        {\r\n            let tempArr=qBTagQuestions.filter((id,q)=> id!==ID)\r\n            setQBTagQuestions(tempArr)\r\n        }\r\n    }\r\n\r\n    const addQuestion=()=>{\r\n        setState({...state,questions:[...state.questions,{userID,subject:IDs.subjectID,chapter:IDs?.chapterID,topic:IDs?.topicID,question:'question',explaination:'',options:[' ',' '],answers:[false,false],tags:[],difficulty:'EASY'}]})    \r\n    }\r\n    const changeQuestion=(q)=>{\r\n        setState({...state,currentQuestion:null})\r\n        setState({...state,currentQuestion:q})\r\n    }\r\n    const answer=(check,o)=>{\r\n        let editedQuestions=state?.questions?.filter((question,q)=>{\r\n            if(q===state.currentQuestion)\r\n            question.answers[o]=check\r\n            return question\r\n        })\r\n        setState({...state,questions:editedQuestions})\r\n    }\r\n    const addOption=()=>{\r\n        state?.questions[state?.currentQuestion].options.push('')\r\n        state?.questions[state?.currentQuestion].answers.push(false)\r\n        setState({...state})\r\n    }\r\n    const removeOption=(i)=>{\r\n        state.questions[state?.currentQuestion].options=state?.questions[state?.currentQuestion].options.filter((_,o)=> o!==i)\r\n        state.questions[state?.currentQuestion].answers=state?.questions[state?.currentQuestion].answers.filter((_,a)=> a!==i)\r\n       setState({...state})\r\n    }\r\n    const removeQuestion=(questionIndex)=>{\r\n        let filterQuestions=state?.questions?.filter((question,q)=> q!==questionIndex)\r\n        setState({...state,questions:filterQuestions})\r\n        if(questionIndex===state.currentQuestion)\r\n        setState({...state,currentQuestion:null})\r\n    }\r\n    const removeQuizQuestion=(questionIndex)=>{\r\n        let filterQuestions=qQuestions?.filter((question,q)=> q!==questionIndex)\r\n        setQQuestions(filterQuestions)\r\n    }\r\n    const editQuestion=(name,value,key)=>{\r\n        // console.log(\"key:\",key.ops)\r\n        // if(key.ops[0].delete)\r\n        // return\r\n        let editedQuestions=state?.questions?.filter((question,q)=>{\r\n            if(q===state.currentQuestion)\r\n            question[name]=value\r\n            return question\r\n        })\r\n        setState({...state,questions:editedQuestions})\r\n    }\r\n    const editAnswer=(value,o)=>{\r\n      let editedQuestions=state?.questions?.filter((question,q)=>{\r\n        if(q===state.currentQuestion)\r\n        question.options[o]=value\r\n        return question\r\n    })\r\n    setState({...state,questions:editedQuestions})\r\n    }\r\n    useEffect(() => {\r\n        if(open,IDs){\r\n            dispatch(questionBankAction.clearTags())    \r\n            dispatch(questionBankAction.get(IDs.quizID))\r\n            .then((res) => {\r\n               setQQuestions(res.questions)\r\n            })\r\n        }\r\n    }, [open,IDs,dispatch])\r\n    const handleClose = () => {\r\n        setState({currentQuestion:null,questions:[]})\r\n        setQBTagQuestions([])\r\n        setQQuestions([])\r\n        setTags([])\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        setSubmitting.on()   \r\n        let action = questionBankAction.add(qBTagQuestions,state?.questions,qQuestions,IDs.quizID)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                handleClose()       \r\n            })\r\n            .catch((err) => {\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={'View Quiz'}\r\n                size='xl'\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button rounded='sm' size='sm' isLoading={submitting} onClick={handleSubmit}>Save Quiz</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                    <HStack  py={2} alignItems='start' h='100%' spacing={5}>\r\n                        <Tabs  w='50%' h='100%'  overflowY='auto' colorScheme='brand' borderRightWidth='thin' pr={1}>\r\n                            <TabList>\r\n                                <Tab>Question Bank</Tab>\r\n                                {ability.can('create:own', 'questions') && <Tab>New Questions</Tab>}\r\n                                <Tab>Quiz</Tab>\r\n                            </TabList>\r\n                            <TabPanels>\r\n                                <TabPanel p={0} py={2}>\r\n                                    <VStack alignItems='flex-start'>\r\n                                        <Input w='50%' size='sm' placeholder='Search Question By Tag From Question Bank' onKeyUp={(e) =>{e.preventDefault();handleInputChange(e,e.keyCode )}} />\r\n                                        <HStack flexWrap='wrap'>\r\n                                            {\r\n                                                tags?.map((tag,t)=> \r\n                                                    <Tag key={t} colorScheme='brand' borderRadius='sm'>\r\n                                                        <TagLabel>{tag}</TagLabel>\r\n                                                        <TagCloseButton />\r\n                                                    </Tag>)\r\n                                            }\r\n                                        </HStack>\r\n                                        <VStack spacing={1} alignItems='flex-start'>\r\n                                            {\r\n\r\n                                                questionBankTagQuestions?.map((question,q)=> \r\n                                                <Checkbox colorScheme='brand' key={'questionBankTagQuestion-'+q}\r\n                                                onChange={(e) => addQuestionFromQB(e.target.checked,q,question?._id)}\r\n                                                >\r\n                                                    <HStack w='100%' borderWidth='thin' px={2} cursor='pointer' bg='gray.100' >\r\n                                                        <Text fontSize='sm' dangerouslySetInnerHTML={{ __html: question?.question }}></Text>\r\n                                                    </HStack>\r\n                                                </Checkbox>)\r\n                                            }\r\n                                            \r\n                                            \r\n                                        </VStack>\r\n                                    </VStack>\r\n                                </TabPanel>\r\n                                {\r\n                                    ability.can('create:own', 'questions') &&\r\n                                    <TabPanel p={0} py={2}>\r\n                                        <VStack alignItems='flex-start'>\r\n                                            <Button rounded='sm' onClick={addQuestion} size='sm' mb={2}><Icon name='md-add' fontSize='18px' color='white' mr={2}/>Question</Button>\r\n                                            {\r\n                                                state?.questions?.map((question,q)=> \r\n                                                <HStack w='100%' KEY={'question-'+q} borderWidth='thin' px={2} cursor='pointer' _hover={{bg: 'gray.100'}} bg={state?.currentQuestion===q?'gray.200':''} >\r\n                                                    <Text fontSize='sm' onClick={()=>{changeQuestion(q)}}>Question #{q+1}</Text>\r\n                                                    <Spacer/>\r\n                                                    <Icon name='ios-close' fontSize='18px' color='red' onClick={()=>{removeQuestion(q)}}/>\r\n                                                </HStack>)\r\n                                            }\r\n                                        </VStack>\r\n                                    </TabPanel>\r\n                                }\r\n                                <TabPanel p={0} py={2}>\r\n                                    <VStack alignItems='flex-start'>\r\n                                        {\r\n                                           qQuestions.length>0? qQuestions?.map((question,q)=> \r\n                                            <HStack w='100%' key={'qQuestion-'+q} borderWidth='thin' px={2} cursor='pointer' bg='gray.100' >\r\n                                                <Text fontSize='sm' dangerouslySetInnerHTML={{ __html: question?.question }}></Text>\r\n                                                <Spacer/>\r\n                                                <Icon name='ios-close' fontSize='18px' color='red' onClick={()=>{removeQuizQuestion(q)}}/>\r\n                                            </HStack>\r\n                                            ):\r\n                                            <Alert status='success'>\r\n                                                <AlertIcon />\r\n                                                <AlertDescription display='block'>\r\n                                                Please Add New Question or Select Questions From Question Bank\r\n                                                </AlertDescription>\r\n                                            </Alert>\r\n                                        }\r\n                                    </VStack>\r\n                                </TabPanel>\r\n                            </TabPanels>\r\n                        </Tabs>\r\n                        {\r\n                            state?.currentQuestion!=null?\r\n                            <VStack w='50%' overflowY='auto' alignItems='flex-start' h='100%'>\r\n                                <Level onChange={(value)=>{changeLevel(value)}}/>\r\n                                <TextEditor label={'Question #'+(state?.currentQuestion+1)} value={state?.questions[state?.currentQuestion].question} onChange={(value,e)=>{editQuestion(\"question\",value,e)}}/>\r\n                                <TextEditor label='Explaination' value={state?.questions[state?.currentQuestion].explaination} onChange={(value,e)=>{editQuestion(\"explaination\",value,e)}}/>\r\n                                <Heading size='sm' w='100%' fontWeight={500}>Options:</Heading>\r\n                                    {\r\n                                        state?.questions[state?.currentQuestion]?.options.map((option,o)=>{\r\n                                            return (\r\n                                            <VStack alignItems='flex-start' key={'option-'+o}>\r\n                                                <TextEditor label={'Option #'+ (o+1)} value={option} onChange={(value)=>{editAnswer(value,o)}}/>\r\n                                                <HStack>\r\n                                                    <Switch size='sm'  colorScheme=\"brand\" isChecked={state?.questions[state?.currentQuestion]?.answers[o]} onChange={(e)=>{answer(e.target.checked,o)}}/>\r\n                                                    {\r\n                                                        o>1 && <Icon name='md-trash' color='red.500' fontSize={18} onClick={()=>{removeOption(o)}}/>\r\n                                                    }\r\n                                                </HStack>\r\n                                            </VStack>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                <HStack>\r\n                                    <Button size='sm' rounded='sm' onClick={addOption}>Add Option</Button>\r\n                                </HStack>\r\n                                <Input  label=\"Tags\" onKeyUp={(e) =>{e.preventDefault();handleQuestionTags(e,e.keyCode )}} />\r\n                                <HStack flexWrap='wrap'>\r\n                                    {\r\n                                            state?.questions[state?.currentQuestion]?.tags.map((tag,t)=>{\r\n                                                return (\r\n                                                    <Tag colorScheme='brand' borderRadius='sm' key={'tag-'+t}>\r\n                                                        <TagLabel>{tag}</TagLabel>\r\n                                                    </Tag>\r\n                                                )\r\n                                            })\r\n                                    }\r\n                                </HStack>\r\n                            </VStack>:\r\n                            <Alert status='success' w='50%'>\r\n                                <AlertIcon />\r\n                                <AlertDescription>\r\n                                 Please Select Question\r\n                                </AlertDescription>\r\n                            </Alert>\r\n                        }\r\n                    </HStack>\r\n                \r\n        </Drawer> \r\n    )\r\n}\r\nexport default ViewQuizForm","import React,{useState,useEffect} from \"react\"\r\nimport {subjectsAction } from '../../redux/actions'\r\nimport { useDispatch } from 'react-redux'\r\nimport {useBoolean, Button, Box, HStack, useToast,Text, VStack} from '@chakra-ui/react'\r\nimport { Drawer, Input, Icon, TextEditor} from '../../ui-elements'\r\n//import { public_path } from '../../config.json'\r\n\r\nconst ContentForm= ({open,data, contentType, onClose}) => {\r\n    const toast= useToast();\r\n    const dispatch = useDispatch();\r\n    const [submitting, setSubmitting] = useBoolean(false)\r\n    const [state, setState] = useState(null)\r\n    const [errors, setErrors] = useState(null)\r\n    const [file,setFile]=useBoolean(false)\r\n    const fileRef = React.useRef()    \r\n    const selectFile = () => {\r\n        fileRef.current.click()\r\n    }\r\n    const handleFileChange = (name, e) => {\r\n        let reader = new FileReader();\r\n        let file = e.target.files[0]; \r\n        setFile.on()  \r\n        reader.onloadend = () => {\r\n            setState({\r\n              ...state,\r\n              [name]: {\r\n                  file: file,\r\n                  preview: reader.result\r\n              }\r\n            })            \r\n        }\r\n        if(file)\r\n        reader.readAsDataURL(file)\r\n    }\r\n\r\n    const handleInputChange= (name,value) => {\r\n        setState({...state,[name]:value})\r\n    }\r\n    useEffect(() => {\r\n        console.log(open)\r\n        if(open,contentType,setFile){\r\n            setState({type:contentType?.type})       \r\n            setFile.off()\r\n            console.log(\"yess\")\r\n        }\r\n        \r\n    }, [open])\r\n\r\n    useEffect(() => {\r\n        if(data && open){\r\n            // setState({\r\n            //     ...data,\r\n            //     thumbnail: {\r\n            //         file: null,\r\n            //         preview: public_path + data?.thumbnail\r\n            //     }\r\n            // }) \r\n            // if(contentType.type==='FILE')\r\n            // setFile.on()\r\n            // else setFile.off();        \r\n            setState({...data})\r\n        }\r\n    }, [data, open])\r\n\r\n    const handleClose = () => {\r\n        setState({})\r\n        setErrors(null)\r\n        setFile.off()\r\n        onClose()\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        var formData;\r\n        console.log(\"state:\",state)\r\n        console.log(\"file:\",file)\r\n       // return\r\n        if(file)\r\n        {\r\n            formData = new FormData()\r\n            formData.append('title', state?.title || '')\r\n            formData.append('type', contentType.type || '')\r\n            formData.append('description', state?.description || '')\r\n            formData.append('content', state?.content?.file)\r\n        }\r\n    console.log(state)\r\n        setSubmitting.on()\r\n        setErrors(null)   \r\n        let action = data ? subjectsAction.updateContent(file?formData:state,file,contentType.topicID,contentType.chapterID) : subjectsAction.addContent(file?formData:state,file,contentType.topicID,contentType.chapterID)\r\n        dispatch(action)\r\n            .then((res) => {\r\n                setSubmitting.off()       \r\n                toast({description: res.message, status: 'success'}) \r\n                onClose()        \r\n            })\r\n            .catch((err) => {\r\n\r\n                setErrors(err?.error)\r\n                toast({description: err?.message, status: 'error'})\r\n                setSubmitting.off()\r\n            })  \r\n    }\r\n\r\n    \r\n    return (\r\n        <Drawer\r\n                open={open}\r\n                onClose={handleClose}\r\n                title={ data ? 'Update '+ contentType?.type : 'Create New '+ contentType?.type}\r\n                footer={\r\n                    <HStack>\r\n                        <Box>\r\n                            <Button isLoading={submitting} rounded='sm' size='sm' type=\"submit\" form=\"subject-form\">Submit</Button>\r\n                        </Box>\r\n                    </HStack>\r\n                }\r\n                >\r\n                <form id=\"subject-form\" onSubmit={handleSubmit}>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input error={errors?.title?.message} label=\"Title\" value={state?.title || ''} onChange={(e) => handleInputChange('title', e.target.value )} />\r\n                    </HStack>\r\n                    <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                        <Input textarea  error={errors?.description?.message} label=\"Description\" value={state?.description || ''} onChange={(e) => handleInputChange('description', e.target.value )} />\r\n                    </HStack>\r\n                    {\r\n                        contentType?.type==='VIDEO'?\r\n                        <HStack justifyContent=\"space-between\" spacing=\"5\" my=\"20px\"  alignItems=\"flex-start\">\r\n                          <Input  error={errors?.description?.content} label=\"Video URL\" leftLabel='WWW.VIMEO.COM/' value={state?.content || 'XXCV23Y'} onChange={(e) => handleInputChange('content', e.target.value )} />\r\n                        </HStack>:\r\n                        contentType?.type==='FILE'?\r\n                        <VStack alignItems='flex-start'>\r\n                            <Button rounded='sm'  size='sm' variant='outline' onClick={(e) => selectFile() }><Icon name=\"ios-document\" color='brand.500' mr={2}/>Select File</Button>\r\n                            <Input d=\"none\" type=\"file\" ref={fileRef} onChange={(e) => handleFileChange('content', e)} />\r\n                            <Text>{state?.content?.file?.name || state?.content}</Text>\r\n                        </VStack>:\r\n                        <HStack>\r\n                            <TextEditor error={errors?.description?.content} label=\"Text Contents\" value={state?.content || ''} onChange={(value) => handleInputChange('content', value )}/>\r\n                        </HStack>\r\n                    }\r\n                    \r\n\r\n                </form>\r\n\r\n            </Drawer> \r\n    )\r\n}\r\nexport default ContentForm","import React, {useEffect, useState} from 'react'\r\nimport './index.css'\r\nimport { Box, useBoolean, HStack, VStack, Heading, Button, Tooltip, Text,useToast, Spacer} from '@chakra-ui/react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { subjectsAction } from '../../redux/actions'\r\nimport { Loader, Icon, Popover, Alert } from '../../ui-elements'\r\nimport {Can} from '../../hooks'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ChapterForm from './ChapterForm';\r\nimport TopicForm from './topicForm'\r\nimport QuizForm from './quizForm';\r\nimport ViewQuizForm from './viewQuizForm';\r\nimport ContentForm from './contentForm';\r\nconst SubjectDetails = () => {\r\n    const navigate = useNavigate()\r\n    const toast = useToast()\r\n    const {subject_id} = useParams()\r\n    const [open, setOpen] = useBoolean(false)\r\n    const [editable, setEditable] = useState(null)\r\n    const [openTopic, setOpenTopic] = useBoolean(false)\r\n    const [editableTopic, setEditableTopic] = useState(null)\r\n    const[chapID,setChapID]=useState(null)\r\n    const [openContent, setOpenContent] = useBoolean(false)\r\n    const [editableContent, setEditableContent] = useState(null)\r\n    const [contentType, setContentType] = useState(null)\r\n    //view quiz\r\n    const [openViewQuiz, setOpenViewQuiz] = useBoolean(false)\r\n    const [IDs,setIDs]=useState(null)\r\n\r\n    const [openQuiz, setOpenQuiz] = useBoolean(false)\r\n    const [editableQuiz, setEditableQuiz] = useState(null)\r\n\r\n\r\n    const dispatch = useDispatch()\r\n    const [loading, setLoading] = useBoolean(false)\r\n    const { subject } = useSelector(state => state.subjects)\r\n    const [chapters, setChapters] = useState([])\r\n    useEffect(() => {\r\n        dispatch(subjectsAction.clear_subject())    \r\n        // eslint-disable-next-line\r\n    }, [])\r\n    useEffect(() => {           \r\n        setLoading.on()\r\n        dispatch((subjectsAction.details(subject_id)))\r\n            .then((res) => {\r\n                setChapters(res?.subject?.chapters)\r\n                setLoading.off()\r\n            })\r\n            .catch((err) => {\r\n                setLoading.off()\r\n            })\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    const editChapter=(data)=>{\r\n        setEditable(data)\r\n        setOpen.on()\r\n    }\r\n    const editTopic=(data,chapterID)=>{\r\n        setEditableTopic(data)\r\n        setChapID(chapterID)\r\n        setOpenTopic.on()\r\n    }\r\n    const deleteChapter= async(id) => {\r\n        let result = await window.confirm('Do you really want to remove this Chapter?', 'Confirm');\r\n        if(result){\r\n            dispatch(subjectsAction.deleteChapter(id))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                    setChapters(subject?.chapters)\r\n                        })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }    \r\n    const deleteTopic= async(topicID,chapterID) => {\r\n        let result = await window.confirm('Do you really want to remove this Topic?', 'Confirm');\r\n        if(result){\r\n            dispatch(subjectsAction.deleteTopic(topicID,chapterID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                    setChapters(subject?.chapters)\r\n                        })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }  \r\n    const editContent=(data,contentType)=>{\r\n        if(contentType==='QUIZ')\r\n        {\r\n            setEditableQuiz(data)\r\n            setOpenQuiz.on()\r\n            return\r\n        }\r\n        setEditableContent(data);\r\n        setOpenContent.on()\r\n    }\r\n    const removeContent=async (chapterID,topicID,contentID)=>{\r\n        let result = await window.confirm('Do you really want to remove this Topic Content?', 'Confirm');\r\n        if(result){\r\n            dispatch(subjectsAction.deleteContent(chapterID,topicID,contentID))\r\n                .then((res) => {\r\n                    toast({description: res.message, status: 'success'})\r\n                })\r\n                .catch((err) => {\r\n                    toast({description: err.error, status: 'error'})\r\n                })        \r\n        }\r\n    }\r\n    const reorder = (list, startIndex, endIndex) => {\r\n        const result = Array.from(list);\r\n        const [removed] = result.splice(startIndex, 1);\r\n        result.splice(endIndex, 0, removed);\r\n        return result;\r\n    }\r\n\r\n    const onDragEnd=(result) => {\r\n        if (!result.destination) {\r\n          return;\r\n        }\r\n        const sourceIndex = result.source.index;\r\n        const destIndex = result.destination.index;\r\n\r\n        if (result.type === \"droppableItem\") {\r\n            const items = reorder(chapters, sourceIndex, destIndex);\r\n            setChapters(items)\r\n        } else if (result.type === \"droppableSubItem\") {\r\n            const itemSubItemMap = chapters.reduce((acc, item) => {\r\n            acc[item._id] = item.topics;\r\n            return acc;\r\n            }, {});\r\n        \r\n            const sourceParentId = result.source.droppableId;\r\n            const destParentId = result.destination.droppableId;\r\n      \r\n            const sourceSubItems = itemSubItemMap[sourceParentId];\r\n            const destSubItems = itemSubItemMap[destParentId];\r\n      \r\n            let newItems = [...chapters];\r\n      \r\n            /* In this case subItems are reOrdered inside same Parent */\r\n            if (sourceParentId === destParentId) {\r\n                const reorderedSubItems = reorder(\r\n                    sourceSubItems,\r\n                    sourceIndex,\r\n                    destIndex\r\n                );\r\n                newItems = newItems.map(item => {\r\n                if (item._id === sourceParentId) {\r\n                    item.topics = reorderedSubItems;\r\n                }\r\n                return item;\r\n                });\r\n                setChapters(newItems);\r\n            } \r\n            else {\r\n                let newSourceSubItems = [...sourceSubItems];\r\n                const [draggedItem] = newSourceSubItems.splice(sourceIndex, 1);      \r\n                let newDestSubItems = [...destSubItems];\r\n                newDestSubItems.splice(destIndex, 0, draggedItem);\r\n                newItems = newItems.map(item => {\r\n                    if (item._id === sourceParentId){\r\n                        item.topics = newSourceSubItems;\r\n                    } else if (item._id === destParentId) {\r\n                        item.topics = newDestSubItems;\r\n                    }\r\n                return item;\r\n                });\r\n                setChapters(newItems);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Box h='100vh' overflowY='auto'>\r\n            {loading && <Loader />}\r\n            <HStack w='100%' px={5} py={2} position='sticky' top={0} bg='white' zIndex={99}>\r\n                <Icon fontSize=\"32px\" color=\"gray.600\" mr={3} name=\"ios-arrow-round-back\" cursor=\"pointer\" onClick={() => navigate(-1)} />\r\n                <Heading size=\"md\">{subject?.title}</Heading>                                 \r\n            </HStack>\r\n            <Box px={5} py={2}>\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <Droppable droppableId=\"dropcontainer\" type=\"droppableItem\">\r\n                        {\r\n                            (provided) => (\r\n                            <Box ref={provided.innerRef}>\r\n                                {provided.placeholder}\r\n                                {\r\n                                    chapters?.length<1?\r\n                                    <Alert status=\"info\">\r\n                                      Please click on the Add new Chapter button to Add the subjects\r\n                                    </Alert>\r\n                                    :\r\n                                    chapters?.map((chapter, c) =>\r\n                                    <Draggable key={chapter._id} draggableId={chapter._id} index={c}>\r\n                                        {\r\n                                            (provided) => (\r\n                                                <Box ref={provided.innerRef} {...provided.draggableProps} my=\"5\" shadow=\"md\" >\r\n                                                    <HStack bg=\"white\" px=\"5\" py=\"1\">\r\n                                                        <Box {...provided.dragHandleProps} mr=\"3\">\r\n                                                            <Icon fontSize=\"20px\" color=\"gray.400\" name=\"ios-reorder\"/>\r\n                                                        </Box>\r\n                                                        <Heading size='sm' fontWeight={500}>{chapter.title}</Heading>\r\n                                                        <Spacer/>\r\n                                                        <HStack>\r\n                                                            <Icon fontSize=\"18px\" cursor='pointer' color=\"green.500\" name=\"md-add\" onClick={()=>{setChapID(chapter._id);setOpenTopic.on()}}/>\r\n                                                            <Icon fontSize=\"18px\" color=\"brand.500\" name=\"ios-create\" onClick={()=>{editChapter(chapter)}}/>\r\n                                                            <Icon fontSize=\"18px\" color=\"red.400\" name=\"ios-trash\" onClick={()=>{deleteChapter(chapter._id)}}/>\r\n                                                        </HStack>\r\n                                                    </HStack>\r\n                                                        <Droppable droppableId={chapter._id} type={`droppableSubItem`}>\r\n                                                            {\r\n                                                                (provided2) => (                                                                    \r\n                                                                        <Box ref={provided2.innerRef} bg=\"gray.100\">\r\n                                                                        {provided2.placeholder}\r\n                                                                        {\r\n                                                                            <VStack spacing={0}>\r\n                                                                                <Box w='100%'>\r\n                                                                                { \r\n                                                                                //   chapter?.topics?.length<1?<Alert status=\"info\" w='400px' bg='white'>Click on Add Button to Add Topic</Alert>:\r\n                                                                                  chapter?.topics?.map((topic, t) =>\r\n                                                                                    <Draggable key={topic._id} draggableId={topic._id} index={t}>\r\n                                                                                        {\r\n                                                                                            (provided3) =>(\r\n                                                                                                <Box ref={provided3.innerRef} {...provided3.draggableProps} mx={4} my={3}> \r\n                                                                                                    <VStack w='100%' spacing={0}>\r\n                                                                                                        <HStack spacing={2} w='100%' px={3} py={1} bg='white'>\r\n                                                                                                            <Box {...provided3.dragHandleProps}>\r\n                                                                                                                <Icon fontSize=\"20px\" color=\"gray.400\" name=\"ios-reorder\"/>\r\n                                                                                                            </Box>\r\n                                                                                                            <HStack>\r\n                                                                                                                <Icon name=\"md-paper\" />\r\n                                                                                                                <Heading size='sm' fontWeight={500}>{topic?.title}</Heading>\r\n                                                                                                            </HStack>\r\n                                                                                                            <Spacer/>\r\n                                                                                                            <HStack>\r\n                                                                                                                <Tooltip label=\"Add Content\" placement=\"right\">\r\n                                                                                                                    <Popover\r\n                                                                                                                        title=\"Add Contents\"\r\n                                                                                                                        actions={\r\n                                                                                                                            <HStack flexWrap=\"wrap\" spacing={3}>\r\n                                                                                                                                <Button w=\"21%\" variant=\"unstyled\" h=\"auto\" bg=\"gray.50\" p=\"4\" py=\"2\" _hover={{ bg: 'gray.100' }} text={{ fontWeight: '400' }} onClick={()=>{setContentType({type:'VIDEO',topicID:topic._id,chapterID:chapter._id});setOpenContent.on()}}>\r\n                                                                                                                                    <Icon name=\"md-videocam\" />\r\n                                                                                                                                    <Text fontSize=\"sm\" fontWeight=\"normal\">Video</Text>\r\n                                                                                                                                </Button>\r\n                                                                                                                                <Button w=\"21%\" variant=\"unstyled\" h=\"auto\" bg=\"gray.50\" p=\"4\" py=\"2\" _hover={{ bg: 'gray.100' }} text={{ fontWeight: '400' }} onClick={()=>{setContentType({type:'TEXT',topicID:topic._id,chapterID:chapter._id});setOpenContent.on()}}>\r\n                                                                                                                                    <Icon name=\"md-paper\" />\r\n                                                                                                                                    <Text fontSize=\"sm\" fontWeight=\"normal\">Text</Text>\r\n                                                                                                                                </Button>\r\n                                                                                                                                <Button w=\"21%\" variant=\"unstyled\" h=\"auto\" bg=\"gray.50\" p=\"4\" py=\"2\" _hover={{ bg: 'gray.100' }} text={{ fontWeight: '400' }} onClick={()=>{setContentType({type:'QUIZ',topicID:topic._id,chapterID:chapter._id});setOpenQuiz.on()}}>\r\n                                                                                                                                    <Icon name=\"ios-help-circle\" />\r\n                                                                                                                                    <Text fontSize=\"sm\" fontWeight=\"normal\">Quiz</Text>\r\n                                                                                                                                </Button>\r\n                                                                                                                                <Button w=\"21%\" variant=\"unstyled\" h=\"auto\" bg=\"gray.50\" p=\"4\" py=\"2\" _hover={{ bg: 'gray.100' }} text={{ fontWeight: '400' }} onClick={()=>{setContentType({type:'FILE',topicID:topic._id,chapterID:chapter._id});setOpenContent.on()}}>\r\n                                                                                                                                    <Icon name=\"ios-attach\" />\r\n                                                                                                                                    <Text fontSize=\"sm\" fontWeight=\"normal\">File</Text>\r\n                                                                                                                                </Button>\r\n                                                                                                                            </HStack>\r\n                                                                                                                        }\r\n                                                                                                                    >\r\n                                                                                                                    <Icon fontSize=\"18px\" cursor='pointer' color=\"green.500\" name=\"ios-more\"/>\r\n                                                                                                                    </Popover>\r\n                                                                                                                </Tooltip>\r\n                                                                                                                <Icon fontSize=\"18px\" color=\"brand.500\" name=\"ios-create\" onClick={()=>{editTopic(topic,chapter._id)}}/>\r\n                                                                                                                <Icon fontSize=\"18px\" color=\"red.400\" name=\"ios-trash\" onClick={()=>{deleteTopic(topic._id,chapter._id)}}/>\r\n                                                                                                            </HStack>\r\n                                                                                                        </HStack>\r\n                                                                                                        <VStack className='contents' bg='white' spacing={1} alignItems='flex-start' w='100%' px={5} py={1}>\r\n                                                                                                            {\r\n                                                                                                                topic?.contents.length<1?\r\n                                                                                                                <Alert status=\"info\" w='400px' bg='white'>Click on Add Button to Add Topic Contents</Alert>\r\n                                                                                                                :\r\n                                                                                                                topic?.contents?.map((content,c)=> <HStack key={c} spacing={3} className='content'>\r\n                                                                                                                    {\r\n                                                                                                                        content?.contentType==='VIDEO'?<Box width='17px'><Icon fontSize=\"16px\" name=\"md-videocam\" /></Box>:\r\n                                                                                                                        content?.contentType==='FILE'?<Box  width='17px'><Icon fontSize=\"16px\" name=\"md-document\" /></Box>:\r\n                                                                                                                        content?.contentType==='TEXT'?<Box  width='17px'><Icon fontSize=\"16px\" name=\"md-text\" /></Box>:\r\n                                                                                                                        <Box  width='17px'><Icon fontSize=\"20px\" name=\"md-help\" /></Box>\r\n                                                                                                                    }\r\n                                                                                                                    <Heading  fontSize='sm' fontWeight={400} pr={5}>{content?.title}</Heading>\r\n                                                                                                                    <HStack className='content-actions'>\r\n                                                                                                                        {content?.contentType==='QUIZ' && <Icon fontSize=\"16px\" name=\"md-list-box\" onClick={()=>{setIDs({chapterID:chapter._id,topicID:topic._id,subjectID:subject._id,quizID:content?.content?._id});setOpenViewQuiz.on()}}/>}\r\n                                                                                                                        <Icon fontSize=\"16px\" color=\"brand.500\" name=\"md-create\" onClick={()=>{setContentType({type:content?.contentType,topicID:topic._id,chapterID:chapter._id});editContent(content,content.contentType)}} />\r\n                                                                                                                        <Icon fontSize=\"16px\" color=\"red.500\" name=\"ios-trash\" onClick={()=>{removeContent(chapter?._id,topic?._id,content?._id)}}/>\r\n                                                                                                                    </HStack>\r\n                                                                                                                </HStack>)\r\n                                                                                                            }\r\n                                                                                                        </VStack>    \r\n                                                                                                    </VStack>\r\n                                                                                                </Box>\r\n                                                                                            )\r\n                                                                                        }\r\n                                                                                    </Draggable>\r\n                                                                                )}\r\n                                                                                </Box>\r\n                                                                            </VStack>\r\n                                                                        }\r\n                                                                        </Box>\r\n                                                                )\r\n                                                            }\r\n                                                        </Droppable>\r\n                                                                                                     \r\n                                                </Box>\r\n                                            )\r\n                                        }\r\n                                    </Draggable>\r\n                                    )\r\n                                }\r\n                            </Box>\r\n                        )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n                <HStack py=\"5\">\r\n                    <Can I=\"create:own\" a=\"subjects\">\r\n                        <Button rounded=\"sm\" size='sm' onClick={setOpen.on}>Add New Chapter</Button>\r\n                    </Can>\r\n                </HStack>\r\n            </Box>\r\n            <ChapterForm open={open} data={editable} subject={subject?._id} onClose={() => { setEditable(null); setOpen.off();setChapters(subject?.chapters)}} />\r\n            <TopicForm open={openTopic} data={editableTopic} chapterID={chapID}   onClose={()=>{setEditableTopic(null);setChapID(null);setOpenTopic.off();setChapters(subject?.chapters)}}/>\r\n            <QuizForm open={openQuiz} data={editableQuiz} contentType={contentType}   onClose={()=>{setEditableQuiz(null); setOpenQuiz.off()}}/>\r\n            <ContentForm open={openContent} data={editableContent} contentType={contentType}   onClose={()=>{setEditableContent(null); setOpenContent.off()}}/>\r\n            <ViewQuizForm open={openViewQuiz} IDs={IDs} onClose={()=>{setIDs(null); setOpenViewQuiz.off()}}/>\r\n          \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default SubjectDetails","import React from \"react\";\r\nimport {Box} from '@chakra-ui/react'\r\nimport { Routes as Switch, Route} from \"react-router-dom\";\r\nimport './index.css'\r\nimport Sidebar from \"./Sidebar\";\r\nimport NotFound from \"../errors/404\";\r\nimport Home from '../home'\r\nimport Gallery from \"../gallery\";\r\nimport News_Events from \"../news&events\";\r\nimport Tenders from \"../tenders\";\r\nimport Jobs from \"../jobs\";\r\nimport Downloads from \"../downloads\";\r\nimport UsefulLinks from \"../usefulLinks\";\r\nimport Headlines from \"../headlines\";\r\nimport Slider from '../slider'\r\nimport Videos from \"../videos\";\r\nimport Locations from \"../kmz\";\r\nimport Team from \"../team\";\r\nimport SocialLinks from \"../sociallinks\";\r\nimport Users from '../users'\r\nimport Subjects from \"../subjects\";\r\nimport SubjectDetails from \"../subjects/SubjectDetails\";\r\n\r\nconst Dashboard = () => {\r\n    return(\r\n        <Box d=\"flex\"  h='100vh' bg=\"gray.100\">\r\n            <Sidebar />\r\n            <Box  maxW=\"calc(100% - 260px)\" flex={1}>\r\n                <Switch>                                                        \r\n                    <Route exact path=\"/\"  element={<Home />} />\r\n                    <Route path=\"/users/*\"  element={<Users />} />      \r\n                    <Route path='/gallery' element={<Gallery/>}/>\r\n                    <Route path='/news-&-events' element={<News_Events/>} />   \r\n                    <Route path='/headlines' element={<Headlines/>}/>          \r\n                    <Route path='/tenders' element={<Tenders/>}/>\r\n                    <Route path='/jobs' element={<Jobs/>}/>\r\n                    <Route path='/downloads' element={<Downloads/>}/>\r\n                    <Route path='/usefulLinks' element={<UsefulLinks/>}/>\r\n                    <Route path='/slider' element={<Slider/>}/>\r\n                    <Route path='/videos' element={<Videos/>}/>\r\n                    <Route path='/locations' element={<Locations/>}/>\r\n                    <Route path='/team' element={<Team/>}/>\r\n                    <Route path='/social-links' element={<SocialLinks/>}/>\r\n                    <Route exact path=\"/subjects\"  element={<Subjects />} />\r\n                    <Route exact path=\"/subjects/:subject_id\"  element={<SubjectDetails/>} />                    \r\n                    <Route path=\"*\" element={<NotFound/>} />\r\n                </Switch>       \r\n            </Box>            \r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Dashboard"],"sourceRoot":""}